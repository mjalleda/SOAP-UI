<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="950e1267-20f6-4d59-99e6-cc56ae3958ff" activeEnvironment="Default" name="Project1_Assertions_TestSteps_Others" soapui-version="5.1.2" resourceRoot="" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="CurrencyConvertorSoap" type="wsdl" bindingName="{http://www.webserviceX.NET/}CurrencyConvertorSoap" soapVersion="1_1" anonymous="optional" definition="http://www.webservicex.com/CurrencyConvertor.asmx?wsdl" id="ea3300ad-8d6f-4cd5-99f5-5bce5dbc8d52" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://www.webservicex.com/CurrencyConvertor.asmx?wsdl"><con:part><con:url>http://www.webservicex.com/CurrencyConvertor.asmx?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.webserviceX.NET/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://www.webserviceX.NET/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://www.webserviceX.NET/">
      <s:element name="ConversionRate">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="FromCurrency" type="tns:Currency"/>
            <s:element minOccurs="1" maxOccurs="1" name="ToCurrency" type="tns:Currency"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:simpleType name="Currency">
        <s:restriction base="s:string">
          <s:enumeration value="AFA"/>
          <s:enumeration value="ALL"/>
          <s:enumeration value="DZD"/>
          <s:enumeration value="ARS"/>
          <s:enumeration value="AWG"/>
          <s:enumeration value="AUD"/>
          <s:enumeration value="BSD"/>
          <s:enumeration value="BHD"/>
          <s:enumeration value="BDT"/>
          <s:enumeration value="BBD"/>
          <s:enumeration value="BZD"/>
          <s:enumeration value="BMD"/>
          <s:enumeration value="BTN"/>
          <s:enumeration value="BOB"/>
          <s:enumeration value="BWP"/>
          <s:enumeration value="BRL"/>
          <s:enumeration value="GBP"/>
          <s:enumeration value="BND"/>
          <s:enumeration value="BIF"/>
          <s:enumeration value="XOF"/>
          <s:enumeration value="XAF"/>
          <s:enumeration value="KHR"/>
          <s:enumeration value="CAD"/>
          <s:enumeration value="CVE"/>
          <s:enumeration value="KYD"/>
          <s:enumeration value="CLP"/>
          <s:enumeration value="CNY"/>
          <s:enumeration value="COP"/>
          <s:enumeration value="KMF"/>
          <s:enumeration value="CRC"/>
          <s:enumeration value="HRK"/>
          <s:enumeration value="CUP"/>
          <s:enumeration value="CYP"/>
          <s:enumeration value="CZK"/>
          <s:enumeration value="DKK"/>
          <s:enumeration value="DJF"/>
          <s:enumeration value="DOP"/>
          <s:enumeration value="XCD"/>
          <s:enumeration value="EGP"/>
          <s:enumeration value="SVC"/>
          <s:enumeration value="EEK"/>
          <s:enumeration value="ETB"/>
          <s:enumeration value="EUR"/>
          <s:enumeration value="FKP"/>
          <s:enumeration value="GMD"/>
          <s:enumeration value="GHC"/>
          <s:enumeration value="GIP"/>
          <s:enumeration value="XAU"/>
          <s:enumeration value="GTQ"/>
          <s:enumeration value="GNF"/>
          <s:enumeration value="GYD"/>
          <s:enumeration value="HTG"/>
          <s:enumeration value="HNL"/>
          <s:enumeration value="HKD"/>
          <s:enumeration value="HUF"/>
          <s:enumeration value="ISK"/>
          <s:enumeration value="INR"/>
          <s:enumeration value="IDR"/>
          <s:enumeration value="IQD"/>
          <s:enumeration value="ILS"/>
          <s:enumeration value="JMD"/>
          <s:enumeration value="JPY"/>
          <s:enumeration value="JOD"/>
          <s:enumeration value="KZT"/>
          <s:enumeration value="KES"/>
          <s:enumeration value="KRW"/>
          <s:enumeration value="KWD"/>
          <s:enumeration value="LAK"/>
          <s:enumeration value="LVL"/>
          <s:enumeration value="LBP"/>
          <s:enumeration value="LSL"/>
          <s:enumeration value="LRD"/>
          <s:enumeration value="LYD"/>
          <s:enumeration value="LTL"/>
          <s:enumeration value="MOP"/>
          <s:enumeration value="MKD"/>
          <s:enumeration value="MGF"/>
          <s:enumeration value="MWK"/>
          <s:enumeration value="MYR"/>
          <s:enumeration value="MVR"/>
          <s:enumeration value="MTL"/>
          <s:enumeration value="MRO"/>
          <s:enumeration value="MUR"/>
          <s:enumeration value="MXN"/>
          <s:enumeration value="MDL"/>
          <s:enumeration value="MNT"/>
          <s:enumeration value="MAD"/>
          <s:enumeration value="MZM"/>
          <s:enumeration value="MMK"/>
          <s:enumeration value="NAD"/>
          <s:enumeration value="NPR"/>
          <s:enumeration value="ANG"/>
          <s:enumeration value="NZD"/>
          <s:enumeration value="NIO"/>
          <s:enumeration value="NGN"/>
          <s:enumeration value="KPW"/>
          <s:enumeration value="NOK"/>
          <s:enumeration value="OMR"/>
          <s:enumeration value="XPF"/>
          <s:enumeration value="PKR"/>
          <s:enumeration value="XPD"/>
          <s:enumeration value="PAB"/>
          <s:enumeration value="PGK"/>
          <s:enumeration value="PYG"/>
          <s:enumeration value="PEN"/>
          <s:enumeration value="PHP"/>
          <s:enumeration value="XPT"/>
          <s:enumeration value="PLN"/>
          <s:enumeration value="QAR"/>
          <s:enumeration value="ROL"/>
          <s:enumeration value="RUB"/>
          <s:enumeration value="WST"/>
          <s:enumeration value="STD"/>
          <s:enumeration value="SAR"/>
          <s:enumeration value="SCR"/>
          <s:enumeration value="SLL"/>
          <s:enumeration value="XAG"/>
          <s:enumeration value="SGD"/>
          <s:enumeration value="SKK"/>
          <s:enumeration value="SIT"/>
          <s:enumeration value="SBD"/>
          <s:enumeration value="SOS"/>
          <s:enumeration value="ZAR"/>
          <s:enumeration value="LKR"/>
          <s:enumeration value="SHP"/>
          <s:enumeration value="SDD"/>
          <s:enumeration value="SRG"/>
          <s:enumeration value="SZL"/>
          <s:enumeration value="SEK"/>
          <s:enumeration value="CHF"/>
          <s:enumeration value="SYP"/>
          <s:enumeration value="TWD"/>
          <s:enumeration value="TZS"/>
          <s:enumeration value="THB"/>
          <s:enumeration value="TOP"/>
          <s:enumeration value="TTD"/>
          <s:enumeration value="TND"/>
          <s:enumeration value="TRL"/>
          <s:enumeration value="USD"/>
          <s:enumeration value="AED"/>
          <s:enumeration value="UGX"/>
          <s:enumeration value="UAH"/>
          <s:enumeration value="UYU"/>
          <s:enumeration value="VUV"/>
          <s:enumeration value="VEB"/>
          <s:enumeration value="VND"/>
          <s:enumeration value="YER"/>
          <s:enumeration value="YUM"/>
          <s:enumeration value="ZMK"/>
          <s:enumeration value="ZWD"/>
          <s:enumeration value="TRY"/>
        </s:restriction>
      </s:simpleType>
      <s:element name="ConversionRateResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ConversionRateResult" type="s:double"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="double" type="s:double"/>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="ConversionRateSoapIn">
    <wsdl:part name="parameters" element="tns:ConversionRate"/>
  </wsdl:message>
  <wsdl:message name="ConversionRateSoapOut">
    <wsdl:part name="parameters" element="tns:ConversionRateResponse"/>
  </wsdl:message>
  <wsdl:message name="ConversionRateHttpGetIn">
    <wsdl:part name="FromCurrency" type="s:string"/>
    <wsdl:part name="ToCurrency" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="ConversionRateHttpGetOut">
    <wsdl:part name="Body" element="tns:double"/>
  </wsdl:message>
  <wsdl:message name="ConversionRateHttpPostIn">
    <wsdl:part name="FromCurrency" type="s:string"/>
    <wsdl:part name="ToCurrency" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="ConversionRateHttpPostOut">
    <wsdl:part name="Body" element="tns:double"/>
  </wsdl:message>
  <wsdl:portType name="CurrencyConvertorSoap">
    <wsdl:operation name="ConversionRate">
      <wsdl:documentation><![CDATA[<br><b>Get conversion rate from one currency to another currency <b><br><p><b><font color='#000080' size='1' face='Verdana'><u>Differenct currency Code and Names around the world</u></font></b></p><blockquote><p><font face='Verdana' size='1'>AFA-Afghanistan Afghani<br>ALL-Albanian Lek<br>DZD-Algerian Dinar<br>ARS-Argentine Peso<br>AWG-Aruba Florin<br>AUD-Australian Dollar<br>BSD-Bahamian Dollar<br>BHD-Bahraini Dinar<br>BDT-Bangladesh Taka<br>BBD-Barbados Dollar<br>BZD-Belize Dollar<br>BMD-Bermuda Dollar<br>BTN-Bhutan Ngultrum<br>BOB-Bolivian Boliviano<br>BWP-Botswana Pula<br>BRL-Brazilian Real<br>GBP-British Pound<br>BND-Brunei Dollar<br>BIF-Burundi Franc<br>XOF-CFA Franc (BCEAO)<br>XAF-CFA Franc (BEAC)<br>KHR-Cambodia Riel<br>CAD-Canadian Dollar<br>CVE-Cape Verde Escudo<br>KYD-Cayman Islands Dollar<br>CLP-Chilean Peso<br>CNY-Chinese Yuan<br>COP-Colombian Peso<br>KMF-Comoros Franc<br>CRC-Costa Rica Colon<br>HRK-Croatian Kuna<br>CUP-Cuban Peso<br>CYP-Cyprus Pound<br>CZK-Czech Koruna<br>DKK-Danish Krone<br>DJF-Dijibouti Franc<br>DOP-Dominican Peso<br>XCD-East Caribbean Dollar<br>EGP-Egyptian Pound<br>SVC-El Salvador Colon<br>EEK-Estonian Kroon<br>ETB-Ethiopian Birr<br>EUR-Euro<br>FKP-Falkland Islands Pound<br>GMD-Gambian Dalasi<br>GHC-Ghanian Cedi<br>GIP-Gibraltar Pound<br>XAU-Gold Ounces<br>GTQ-Guatemala Quetzal<br>GNF-Guinea Franc<br>GYD-Guyana Dollar<br>HTG-Haiti Gourde<br>HNL-Honduras Lempira<br>HKD-Hong Kong Dollar<br>HUF-Hungarian Forint<br>ISK-Iceland Krona<br>INR-Indian Rupee<br>IDR-Indonesian Rupiah<br>IQD-Iraqi Dinar<br>ILS-Israeli Shekel<br>JMD-Jamaican Dollar<br>JPY-Japanese Yen<br>JOD-Jordanian Dinar<br>KZT-Kazakhstan Tenge<br>KES-Kenyan Shilling<br>KRW-Korean Won<br>KWD-Kuwaiti Dinar<br>LAK-Lao Kip<br>LVL-Latvian Lat<br>LBP-Lebanese Pound<br>LSL-Lesotho Loti<br>LRD-Liberian Dollar<br>LYD-Libyan Dinar<br>LTL-Lithuanian Lita<br>MOP-Macau Pataca<br>MKD-Macedonian Denar<br>MGF-Malagasy Franc<br>MWK-Malawi Kwacha<br>MYR-Malaysian Ringgit<br>MVR-Maldives Rufiyaa<br>MTL-Maltese Lira<br>MRO-Mauritania Ougulya<br>MUR-Mauritius Rupee<br>MXN-Mexican Peso<br>MDL-Moldovan Leu<br>MNT-Mongolian Tugrik<br>MAD-Moroccan Dirham<br>MZM-Mozambique Metical<br>MMK-Myanmar Kyat<br>NAD-Namibian Dollar<br>NPR-Nepalese Rupee<br>ANG-Neth Antilles Guilder<br>NZD-New Zealand Dollar<br>NIO-Nicaragua Cordoba<br>NGN-Nigerian Naira<br>KPW-North Korean Won<br>NOK-Norwegian Krone<br>OMR-Omani Rial<br>XPF-Pacific Franc<br>PKR-Pakistani Rupee<br>XPD-Palladium Ounces<br>PAB-Panama Balboa<br>PGK-Papua New Guinea Kina<br>PYG-Paraguayan Guarani<br>PEN-Peruvian Nuevo Sol<br>PHP-Philippine Peso<br>XPT-Platinum Ounces<br>PLN-Polish Zloty<br>QAR-Qatar Rial<br>ROL-Romanian Leu<br>RUB-Russian Rouble<br>WST-Samoa Tala<br>STD-Sao Tome Dobra<br>SAR-Saudi Arabian Riyal<br>SCR-Seychelles Rupee<br>SLL-Sierra Leone Leone<br>XAG-Silver Ounces<br>SGD-Singapore Dollar<br>SKK-Slovak Koruna<br>SIT-Slovenian Tolar<br>SBD-Solomon Islands Dollar<br>SOS-Somali Shilling<br>ZAR-South African Rand<br>LKR-Sri Lanka Rupee<br>SHP-St Helena Pound<br>SDD-Sudanese Dinar<br>SRG-Surinam Guilder<br>SZL-Swaziland Lilageni<br>SEK-Swedish Krona<br>TRY-Turkey Lira<br>CHF-Swiss Franc<br>SYP-Syrian Pound<br>TWD-Taiwan Dollar<br>TZS-Tanzanian Shilling<br>THB-Thai Baht<br>TOP-Tonga Pa'anga<br>TTD-Trinidad&amp;amp;Tobago Dollar<br>TND-Tunisian Dinar<br>TRL-Turkish Lira<br>USD-U.S. Dollar<br>AED-UAE Dirham<br>UGX-Ugandan Shilling<br>UAH-Ukraine Hryvnia<br>UYU-Uruguayan New Peso<br>VUV-Vanuatu Vatu<br>VEB-Venezuelan Bolivar<br>VND-Vietnam Dong<br>YER-Yemen Riyal<br>YUM-Yugoslav Dinar<br>ZMK-Zambian Kwacha<br>ZWD-Zimbabwe Dollar</font></p></blockquote>]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:ConversionRateSoapIn"/>
      <wsdl:output message="tns:ConversionRateSoapOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="CurrencyConvertorHttpGet">
    <wsdl:operation name="ConversionRate">
      <wsdl:documentation><![CDATA[<br><b>Get conversion rate from one currency to another currency <b><br><p><b><font color='#000080' size='1' face='Verdana'><u>Differenct currency Code and Names around the world</u></font></b></p><blockquote><p><font face='Verdana' size='1'>AFA-Afghanistan Afghani<br>ALL-Albanian Lek<br>DZD-Algerian Dinar<br>ARS-Argentine Peso<br>AWG-Aruba Florin<br>AUD-Australian Dollar<br>BSD-Bahamian Dollar<br>BHD-Bahraini Dinar<br>BDT-Bangladesh Taka<br>BBD-Barbados Dollar<br>BZD-Belize Dollar<br>BMD-Bermuda Dollar<br>BTN-Bhutan Ngultrum<br>BOB-Bolivian Boliviano<br>BWP-Botswana Pula<br>BRL-Brazilian Real<br>GBP-British Pound<br>BND-Brunei Dollar<br>BIF-Burundi Franc<br>XOF-CFA Franc (BCEAO)<br>XAF-CFA Franc (BEAC)<br>KHR-Cambodia Riel<br>CAD-Canadian Dollar<br>CVE-Cape Verde Escudo<br>KYD-Cayman Islands Dollar<br>CLP-Chilean Peso<br>CNY-Chinese Yuan<br>COP-Colombian Peso<br>KMF-Comoros Franc<br>CRC-Costa Rica Colon<br>HRK-Croatian Kuna<br>CUP-Cuban Peso<br>CYP-Cyprus Pound<br>CZK-Czech Koruna<br>DKK-Danish Krone<br>DJF-Dijibouti Franc<br>DOP-Dominican Peso<br>XCD-East Caribbean Dollar<br>EGP-Egyptian Pound<br>SVC-El Salvador Colon<br>EEK-Estonian Kroon<br>ETB-Ethiopian Birr<br>EUR-Euro<br>FKP-Falkland Islands Pound<br>GMD-Gambian Dalasi<br>GHC-Ghanian Cedi<br>GIP-Gibraltar Pound<br>XAU-Gold Ounces<br>GTQ-Guatemala Quetzal<br>GNF-Guinea Franc<br>GYD-Guyana Dollar<br>HTG-Haiti Gourde<br>HNL-Honduras Lempira<br>HKD-Hong Kong Dollar<br>HUF-Hungarian Forint<br>ISK-Iceland Krona<br>INR-Indian Rupee<br>IDR-Indonesian Rupiah<br>IQD-Iraqi Dinar<br>ILS-Israeli Shekel<br>JMD-Jamaican Dollar<br>JPY-Japanese Yen<br>JOD-Jordanian Dinar<br>KZT-Kazakhstan Tenge<br>KES-Kenyan Shilling<br>KRW-Korean Won<br>KWD-Kuwaiti Dinar<br>LAK-Lao Kip<br>LVL-Latvian Lat<br>LBP-Lebanese Pound<br>LSL-Lesotho Loti<br>LRD-Liberian Dollar<br>LYD-Libyan Dinar<br>LTL-Lithuanian Lita<br>MOP-Macau Pataca<br>MKD-Macedonian Denar<br>MGF-Malagasy Franc<br>MWK-Malawi Kwacha<br>MYR-Malaysian Ringgit<br>MVR-Maldives Rufiyaa<br>MTL-Maltese Lira<br>MRO-Mauritania Ougulya<br>MUR-Mauritius Rupee<br>MXN-Mexican Peso<br>MDL-Moldovan Leu<br>MNT-Mongolian Tugrik<br>MAD-Moroccan Dirham<br>MZM-Mozambique Metical<br>MMK-Myanmar Kyat<br>NAD-Namibian Dollar<br>NPR-Nepalese Rupee<br>ANG-Neth Antilles Guilder<br>NZD-New Zealand Dollar<br>NIO-Nicaragua Cordoba<br>NGN-Nigerian Naira<br>KPW-North Korean Won<br>NOK-Norwegian Krone<br>OMR-Omani Rial<br>XPF-Pacific Franc<br>PKR-Pakistani Rupee<br>XPD-Palladium Ounces<br>PAB-Panama Balboa<br>PGK-Papua New Guinea Kina<br>PYG-Paraguayan Guarani<br>PEN-Peruvian Nuevo Sol<br>PHP-Philippine Peso<br>XPT-Platinum Ounces<br>PLN-Polish Zloty<br>QAR-Qatar Rial<br>ROL-Romanian Leu<br>RUB-Russian Rouble<br>WST-Samoa Tala<br>STD-Sao Tome Dobra<br>SAR-Saudi Arabian Riyal<br>SCR-Seychelles Rupee<br>SLL-Sierra Leone Leone<br>XAG-Silver Ounces<br>SGD-Singapore Dollar<br>SKK-Slovak Koruna<br>SIT-Slovenian Tolar<br>SBD-Solomon Islands Dollar<br>SOS-Somali Shilling<br>ZAR-South African Rand<br>LKR-Sri Lanka Rupee<br>SHP-St Helena Pound<br>SDD-Sudanese Dinar<br>SRG-Surinam Guilder<br>SZL-Swaziland Lilageni<br>SEK-Swedish Krona<br>TRY-Turkey Lira<br>CHF-Swiss Franc<br>SYP-Syrian Pound<br>TWD-Taiwan Dollar<br>TZS-Tanzanian Shilling<br>THB-Thai Baht<br>TOP-Tonga Pa'anga<br>TTD-Trinidad&amp;amp;Tobago Dollar<br>TND-Tunisian Dinar<br>TRL-Turkish Lira<br>USD-U.S. Dollar<br>AED-UAE Dirham<br>UGX-Ugandan Shilling<br>UAH-Ukraine Hryvnia<br>UYU-Uruguayan New Peso<br>VUV-Vanuatu Vatu<br>VEB-Venezuelan Bolivar<br>VND-Vietnam Dong<br>YER-Yemen Riyal<br>YUM-Yugoslav Dinar<br>ZMK-Zambian Kwacha<br>ZWD-Zimbabwe Dollar</font></p></blockquote>]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:ConversionRateHttpGetIn"/>
      <wsdl:output message="tns:ConversionRateHttpGetOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="CurrencyConvertorHttpPost">
    <wsdl:operation name="ConversionRate">
      <wsdl:documentation><![CDATA[<br><b>Get conversion rate from one currency to another currency <b><br><p><b><font color='#000080' size='1' face='Verdana'><u>Differenct currency Code and Names around the world</u></font></b></p><blockquote><p><font face='Verdana' size='1'>AFA-Afghanistan Afghani<br>ALL-Albanian Lek<br>DZD-Algerian Dinar<br>ARS-Argentine Peso<br>AWG-Aruba Florin<br>AUD-Australian Dollar<br>BSD-Bahamian Dollar<br>BHD-Bahraini Dinar<br>BDT-Bangladesh Taka<br>BBD-Barbados Dollar<br>BZD-Belize Dollar<br>BMD-Bermuda Dollar<br>BTN-Bhutan Ngultrum<br>BOB-Bolivian Boliviano<br>BWP-Botswana Pula<br>BRL-Brazilian Real<br>GBP-British Pound<br>BND-Brunei Dollar<br>BIF-Burundi Franc<br>XOF-CFA Franc (BCEAO)<br>XAF-CFA Franc (BEAC)<br>KHR-Cambodia Riel<br>CAD-Canadian Dollar<br>CVE-Cape Verde Escudo<br>KYD-Cayman Islands Dollar<br>CLP-Chilean Peso<br>CNY-Chinese Yuan<br>COP-Colombian Peso<br>KMF-Comoros Franc<br>CRC-Costa Rica Colon<br>HRK-Croatian Kuna<br>CUP-Cuban Peso<br>CYP-Cyprus Pound<br>CZK-Czech Koruna<br>DKK-Danish Krone<br>DJF-Dijibouti Franc<br>DOP-Dominican Peso<br>XCD-East Caribbean Dollar<br>EGP-Egyptian Pound<br>SVC-El Salvador Colon<br>EEK-Estonian Kroon<br>ETB-Ethiopian Birr<br>EUR-Euro<br>FKP-Falkland Islands Pound<br>GMD-Gambian Dalasi<br>GHC-Ghanian Cedi<br>GIP-Gibraltar Pound<br>XAU-Gold Ounces<br>GTQ-Guatemala Quetzal<br>GNF-Guinea Franc<br>GYD-Guyana Dollar<br>HTG-Haiti Gourde<br>HNL-Honduras Lempira<br>HKD-Hong Kong Dollar<br>HUF-Hungarian Forint<br>ISK-Iceland Krona<br>INR-Indian Rupee<br>IDR-Indonesian Rupiah<br>IQD-Iraqi Dinar<br>ILS-Israeli Shekel<br>JMD-Jamaican Dollar<br>JPY-Japanese Yen<br>JOD-Jordanian Dinar<br>KZT-Kazakhstan Tenge<br>KES-Kenyan Shilling<br>KRW-Korean Won<br>KWD-Kuwaiti Dinar<br>LAK-Lao Kip<br>LVL-Latvian Lat<br>LBP-Lebanese Pound<br>LSL-Lesotho Loti<br>LRD-Liberian Dollar<br>LYD-Libyan Dinar<br>LTL-Lithuanian Lita<br>MOP-Macau Pataca<br>MKD-Macedonian Denar<br>MGF-Malagasy Franc<br>MWK-Malawi Kwacha<br>MYR-Malaysian Ringgit<br>MVR-Maldives Rufiyaa<br>MTL-Maltese Lira<br>MRO-Mauritania Ougulya<br>MUR-Mauritius Rupee<br>MXN-Mexican Peso<br>MDL-Moldovan Leu<br>MNT-Mongolian Tugrik<br>MAD-Moroccan Dirham<br>MZM-Mozambique Metical<br>MMK-Myanmar Kyat<br>NAD-Namibian Dollar<br>NPR-Nepalese Rupee<br>ANG-Neth Antilles Guilder<br>NZD-New Zealand Dollar<br>NIO-Nicaragua Cordoba<br>NGN-Nigerian Naira<br>KPW-North Korean Won<br>NOK-Norwegian Krone<br>OMR-Omani Rial<br>XPF-Pacific Franc<br>PKR-Pakistani Rupee<br>XPD-Palladium Ounces<br>PAB-Panama Balboa<br>PGK-Papua New Guinea Kina<br>PYG-Paraguayan Guarani<br>PEN-Peruvian Nuevo Sol<br>PHP-Philippine Peso<br>XPT-Platinum Ounces<br>PLN-Polish Zloty<br>QAR-Qatar Rial<br>ROL-Romanian Leu<br>RUB-Russian Rouble<br>WST-Samoa Tala<br>STD-Sao Tome Dobra<br>SAR-Saudi Arabian Riyal<br>SCR-Seychelles Rupee<br>SLL-Sierra Leone Leone<br>XAG-Silver Ounces<br>SGD-Singapore Dollar<br>SKK-Slovak Koruna<br>SIT-Slovenian Tolar<br>SBD-Solomon Islands Dollar<br>SOS-Somali Shilling<br>ZAR-South African Rand<br>LKR-Sri Lanka Rupee<br>SHP-St Helena Pound<br>SDD-Sudanese Dinar<br>SRG-Surinam Guilder<br>SZL-Swaziland Lilageni<br>SEK-Swedish Krona<br>TRY-Turkey Lira<br>CHF-Swiss Franc<br>SYP-Syrian Pound<br>TWD-Taiwan Dollar<br>TZS-Tanzanian Shilling<br>THB-Thai Baht<br>TOP-Tonga Pa'anga<br>TTD-Trinidad&amp;amp;Tobago Dollar<br>TND-Tunisian Dinar<br>TRL-Turkish Lira<br>USD-U.S. Dollar<br>AED-UAE Dirham<br>UGX-Ugandan Shilling<br>UAH-Ukraine Hryvnia<br>UYU-Uruguayan New Peso<br>VUV-Vanuatu Vatu<br>VEB-Venezuelan Bolivar<br>VND-Vietnam Dong<br>YER-Yemen Riyal<br>YUM-Yugoslav Dinar<br>ZMK-Zambian Kwacha<br>ZWD-Zimbabwe Dollar</font></p></blockquote>]]]]>><![CDATA[</wsdl:documentation>
      <wsdl:input message="tns:ConversionRateHttpPostIn"/>
      <wsdl:output message="tns:ConversionRateHttpPostOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CurrencyConvertorSoap" type="tns:CurrencyConvertorSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="ConversionRate">
      <soap:operation soapAction="http://www.webserviceX.NET/ConversionRate" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="CurrencyConvertorSoap12" type="tns:CurrencyConvertorSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="ConversionRate">
      <soap12:operation soapAction="http://www.webserviceX.NET/ConversionRate" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="CurrencyConvertorHttpGet" type="tns:CurrencyConvertorHttpGet">
    <http:binding verb="GET"/>
    <wsdl:operation name="ConversionRate">
      <http:operation location="/ConversionRate"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="CurrencyConvertorHttpPost" type="tns:CurrencyConvertorHttpPost">
    <http:binding verb="POST"/>
    <wsdl:operation name="ConversionRate">
      <http:operation location="/ConversionRate"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CurrencyConvertor">
    <wsdl:port name="CurrencyConvertorSoap" binding="tns:CurrencyConvertorSoap">
      <soap:address location="http://www.webservicex.com/CurrencyConvertor.asmx"/>
    </wsdl:port>
    <wsdl:port name="CurrencyConvertorSoap12" binding="tns:CurrencyConvertorSoap12">
      <soap12:address location="http://www.webservicex.com/CurrencyConvertor.asmx"/>
    </wsdl:port>
    <wsdl:port name="CurrencyConvertorHttpGet" binding="tns:CurrencyConvertorHttpGet">
      <http:address location="http://www.webservicex.com/CurrencyConvertor.asmx"/>
    </wsdl:port>
    <wsdl:port name="CurrencyConvertorHttpPost" binding="tns:CurrencyConvertorHttpPost">
      <http:address location="http://www.webservicex.com/CurrencyConvertor.asmx"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://www.webservicex.com/CurrencyConvertor.asmx</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.webserviceX.NET/ConversionRate" name="ConversionRate" bindingOperationName="ConversionRate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="b6856012-c70c-4e83-88a3-70f0d23ef35c"><con:settings/><con:call name="Request 1" id="3609bd50-9a9c-4a24-a39d-e71dd39a28dc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.com/CurrencyConvertor.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET/">
   <soapenv:Header/>
   <soapenv:Body>
      <web:ConversionRate>
         <web:FromCurrency>?</web:FromCurrency>
         <web:ToCurrency>?</web:ToCurrency>
      </web:ConversionRate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webserviceX.NET/ConversionRate"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d00bb823-f2a5-4ef4-9767-6fe65954fa1f" wsaVersion="NONE" name="TemperatureConversionsSoapBinding" type="wsdl" bindingName="{http://webservices.daehosting.com/temperature}TemperatureConversionsSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.daehosting.com/services/TemperatureConversions.wso?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.daehosting.com/services/TemperatureConversions.wso?WSDL"><con:part><con:url>http://webservices.daehosting.com/services/TemperatureConversions.wso?WSDL</con:url><con:content><![CDATA[<definitions name="TemperatureConversions" targetNamespace="http://webservices.daehosting.com/temperature" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://webservices.daehosting.com/temperature">
  <types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://webservices.daehosting.com/temperature">
      <xs:element name="CelciusToFahrenheit">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="nCelcius" type="xs:decimal"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CelciusToFahrenheitResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CelciusToFahrenheitResult" type="xs:decimal"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FahrenheitToCelcius">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="nFahrenheit" type="xs:decimal"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FahrenheitToCelciusResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="FahrenheitToCelciusResult" type="xs:decimal"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="WindChillInCelcius">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="nCelcius" type="xs:decimal"/>
            <xs:element name="nWindSpeed" type="xs:decimal"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="WindChillInCelciusResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="WindChillInCelciusResult" type="xs:decimal"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="WindChillInFahrenheit">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="nFahrenheit" type="xs:decimal"/>
            <xs:element name="nWindSpeed" type="xs:decimal"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="WindChillInFahrenheitResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="WindChillInFahrenheitResult" type="xs:decimal"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </types>
  <message name="CelciusToFahrenheitSoapRequest">
    <part name="parameters" element="tns:CelciusToFahrenheit"/>
  </message>
  <message name="CelciusToFahrenheitSoapResponse">
    <part name="parameters" element="tns:CelciusToFahrenheitResponse"/>
  </message>
  <message name="FahrenheitToCelciusSoapRequest">
    <part name="parameters" element="tns:FahrenheitToCelcius"/>
  </message>
  <message name="FahrenheitToCelciusSoapResponse">
    <part name="parameters" element="tns:FahrenheitToCelciusResponse"/>
  </message>
  <message name="WindChillInCelciusSoapRequest">
    <part name="parameters" element="tns:WindChillInCelcius"/>
  </message>
  <message name="WindChillInCelciusSoapResponse">
    <part name="parameters" element="tns:WindChillInCelciusResponse"/>
  </message>
  <message name="WindChillInFahrenheitSoapRequest">
    <part name="parameters" element="tns:WindChillInFahrenheit"/>
  </message>
  <message name="WindChillInFahrenheitSoapResponse">
    <part name="parameters" element="tns:WindChillInFahrenheitResponse"/>
  </message>
  <portType name="TemperatureConversionsSoapType">
    <operation name="CelciusToFahrenheit">
      <documentation>Converts a Celcius Temperature to a Fahrenheit value</documentation>
      <input message="tns:CelciusToFahrenheitSoapRequest"/>
      <output message="tns:CelciusToFahrenheitSoapResponse"/>
    </operation>
    <operation name="FahrenheitToCelcius">
      <documentation>Converts a Fahrenheit Temperature to a Celcius value</documentation>
      <input message="tns:FahrenheitToCelciusSoapRequest"/>
      <output message="tns:FahrenheitToCelciusSoapResponse"/>
    </operation>
    <operation name="WindChillInCelcius">
      <documentation>Windchill temperature calculated with the formula of Steadman</documentation>
      <input message="tns:WindChillInCelciusSoapRequest"/>
      <output message="tns:WindChillInCelciusSoapResponse"/>
    </operation>
    <operation name="WindChillInFahrenheit">
      <documentation>Windchill temperature calculated with the formula of Steadman</documentation>
      <input message="tns:WindChillInFahrenheitSoapRequest"/>
      <output message="tns:WindChillInFahrenheitSoapResponse"/>
    </operation>
  </portType>
  <binding name="TemperatureConversionsSoapBinding" type="tns:TemperatureConversionsSoapType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="CelciusToFahrenheit">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="FahrenheitToCelcius">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="WindChillInCelcius">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="WindChillInFahrenheit">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="TemperatureConversions">
    <documentation>Visual DataFlex Web Service to convert temperature values between Celcius and Fahrenheit</documentation>
    <port name="TemperatureConversionsSoap" binding="tns:TemperatureConversionsSoapBinding">
      <soap:address location="http://webservices.daehosting.com/services/TemperatureConversions.wso"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://webservices.daehosting.com/services/TemperatureConversions.wso</con:endpoint></con:endpoints><con:operation id="427d6a83-fdf2-4d11-8851-fd991de8b5e6" isOneWay="false" action="" name="CelciusToFahrenheit" bindingOperationName="CelciusToFahrenheit" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f06b1f7d-62b5-4712-9569-be178a172340" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.daehosting.com/services/TemperatureConversions.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://webservices.daehosting.com/temperature">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:CelciusToFahrenheit>
         <tem:nCelcius>?</tem:nCelcius>
      </tem:CelciusToFahrenheit>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://webservices.daehosting.com/temperature/TemperatureConversionsSoapType/CelciusToFahrenheitRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="858f2832-a085-455c-b91f-680c52a5855b" isOneWay="false" action="" name="FahrenheitToCelcius" bindingOperationName="FahrenheitToCelcius" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="eacba6bb-f893-4adc-841c-f5892e0822c2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.daehosting.com/services/TemperatureConversions.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://webservices.daehosting.com/temperature">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:FahrenheitToCelcius>
         <tem:nFahrenheit>?</tem:nFahrenheit>
      </tem:FahrenheitToCelcius>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://webservices.daehosting.com/temperature/TemperatureConversionsSoapType/FahrenheitToCelciusRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="f5fa795f-7414-41cb-af9b-b15624e59996" isOneWay="false" action="" name="WindChillInCelcius" bindingOperationName="WindChillInCelcius" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d1c0d64d-c1b9-4f1d-90d6-ea12bf5c7ac9" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.daehosting.com/services/TemperatureConversions.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://webservices.daehosting.com/temperature">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:WindChillInCelcius>
         <tem:nCelcius>?</tem:nCelcius>
         <tem:nWindSpeed>?</tem:nWindSpeed>
      </tem:WindChillInCelcius>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://webservices.daehosting.com/temperature/TemperatureConversionsSoapType/WindChillInCelciusRequest"/></con:call></con:operation><con:operation id="ad510b07-c6c4-4697-a26f-7ac830dc1d1c" isOneWay="false" action="" name="WindChillInFahrenheit" bindingOperationName="WindChillInFahrenheit" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8fae954e-b8b7-4298-8c6f-5d5e67ae8391" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.daehosting.com/services/TemperatureConversions.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://webservices.daehosting.com/temperature">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:WindChillInFahrenheit>
         <tem:nFahrenheit>?</tem:nFahrenheit>
         <tem:nWindSpeed>?</tem:nWindSpeed>
      </tem:WindChillInFahrenheit>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://webservices.daehosting.com/temperature/TemperatureConversionsSoapType/WindChillInFahrenheitRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="6930ab6b-9fc6-46a0-bce8-f6f933a1ab6f" wsaVersion="NONE" name="WeatherSoap" type="wsdl" bindingName="{http://ws.cdyne.com/WeatherWS/}WeatherSoap" soapVersion="1_1" anonymous="optional" definition="http://wsf.cdyne.com/WeatherWS/Weather.asmx?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://wsf.cdyne.com/WeatherWS/Weather.asmx?wsdl"><con:part><con:url>http://wsf.cdyne.com/WeatherWS/Weather.asmx?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://ws.cdyne.com/WeatherWS/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://ws.cdyne.com/WeatherWS/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://ws.cdyne.com/WeatherWS/">
      <s:element name="GetWeatherInformation">
        <s:complexType/>
      </s:element>
      <s:element name="GetWeatherInformationResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetWeatherInformationResult" type="tns:ArrayOfWeatherDescription"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfWeatherDescription">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="WeatherDescription" type="tns:WeatherDescription"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="WeatherDescription">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="WeatherID" type="s:short"/>
          <s:element minOccurs="0" maxOccurs="1" name="Description" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="PictureURL" type="s:string"/>
        </s:sequence>
      </s:complexType>
      <s:element name="GetCityForecastByZIP">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ZIP" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCityForecastByZIPResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCityForecastByZIPResult" type="tns:ForecastReturn"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ForecastReturn">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="Success" type="s:boolean"/>
          <s:element minOccurs="0" maxOccurs="1" name="ResponseText" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="State" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="WeatherStationCity" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="ForecastResult" type="tns:ArrayOfForecast"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfForecast">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="Forecast" nillable="true" type="tns:Forecast"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="Forecast">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="Date" type="s:dateTime"/>
          <s:element minOccurs="1" maxOccurs="1" name="WeatherID" type="s:short"/>
          <s:element minOccurs="0" maxOccurs="1" name="Desciption" type="s:string"/>
          <s:element minOccurs="1" maxOccurs="1" name="Temperatures" type="tns:temp"/>
          <s:element minOccurs="1" maxOccurs="1" name="ProbabilityOfPrecipiation" type="tns:POP"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="temp">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="MorningLow" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="DaytimeHigh" type="s:string"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="POP">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="Nighttime" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Daytime" type="s:string"/>
        </s:sequence>
      </s:complexType>
      <s:element name="GetCityWeatherByZIP">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ZIP" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCityWeatherByZIPResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetCityWeatherByZIPResult" type="tns:WeatherReturn"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="WeatherReturn">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="Success" type="s:boolean"/>
          <s:element minOccurs="0" maxOccurs="1" name="ResponseText" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="State" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="WeatherStationCity" type="s:string"/>
          <s:element minOccurs="1" maxOccurs="1" name="WeatherID" type="s:short"/>
          <s:element minOccurs="0" maxOccurs="1" name="Description" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Temperature" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="RelativeHumidity" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Wind" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Pressure" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Visibility" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="WindChill" type="s:string"/>
          <s:element minOccurs="0" maxOccurs="1" name="Remarks" type="s:string"/>
        </s:sequence>
      </s:complexType>
      <s:element name="ArrayOfWeatherDescription" nillable="true" type="tns:ArrayOfWeatherDescription"/>
      <s:element name="ForecastReturn" nillable="true" type="tns:ForecastReturn"/>
      <s:element name="WeatherReturn" type="tns:WeatherReturn"/>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="GetWeatherInformationSoapIn">
    <wsdl:part name="parameters" element="tns:GetWeatherInformation"/>
  </wsdl:message>
  <wsdl:message name="GetWeatherInformationSoapOut">
    <wsdl:part name="parameters" element="tns:GetWeatherInformationResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCityForecastByZIPSoapIn">
    <wsdl:part name="parameters" element="tns:GetCityForecastByZIP"/>
  </wsdl:message>
  <wsdl:message name="GetCityForecastByZIPSoapOut">
    <wsdl:part name="parameters" element="tns:GetCityForecastByZIPResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCityWeatherByZIPSoapIn">
    <wsdl:part name="parameters" element="tns:GetCityWeatherByZIP"/>
  </wsdl:message>
  <wsdl:message name="GetCityWeatherByZIPSoapOut">
    <wsdl:part name="parameters" element="tns:GetCityWeatherByZIPResponse"/>
  </wsdl:message>
  <wsdl:message name="GetWeatherInformationHttpGetIn"/>
  <wsdl:message name="GetWeatherInformationHttpGetOut">
    <wsdl:part name="Body" element="tns:ArrayOfWeatherDescription"/>
  </wsdl:message>
  <wsdl:message name="GetCityForecastByZIPHttpGetIn">
    <wsdl:part name="ZIP" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCityForecastByZIPHttpGetOut">
    <wsdl:part name="Body" element="tns:ForecastReturn"/>
  </wsdl:message>
  <wsdl:message name="GetCityWeatherByZIPHttpGetIn">
    <wsdl:part name="ZIP" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCityWeatherByZIPHttpGetOut">
    <wsdl:part name="Body" element="tns:WeatherReturn"/>
  </wsdl:message>
  <wsdl:message name="GetWeatherInformationHttpPostIn"/>
  <wsdl:message name="GetWeatherInformationHttpPostOut">
    <wsdl:part name="Body" element="tns:ArrayOfWeatherDescription"/>
  </wsdl:message>
  <wsdl:message name="GetCityForecastByZIPHttpPostIn">
    <wsdl:part name="ZIP" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCityForecastByZIPHttpPostOut">
    <wsdl:part name="Body" element="tns:ForecastReturn"/>
  </wsdl:message>
  <wsdl:message name="GetCityWeatherByZIPHttpPostIn">
    <wsdl:part name="ZIP" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCityWeatherByZIPHttpPostOut">
    <wsdl:part name="Body" element="tns:WeatherReturn"/>
  </wsdl:message>
  <wsdl:portType name="WeatherSoap">
    <wsdl:operation name="GetWeatherInformation">
      <wsdl:documentation>Gets Information for each WeatherID</wsdl:documentation>
      <wsdl:input message="tns:GetWeatherInformationSoapIn"/>
      <wsdl:output message="tns:GetWeatherInformationSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCityForecastByZIP">
      <wsdl:documentation>Allows you to get your City Forecast Over the Next 7 Days, which is updated hourly. U.S. Only</wsdl:documentation>
      <wsdl:input message="tns:GetCityForecastByZIPSoapIn"/>
      <wsdl:output message="tns:GetCityForecastByZIPSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCityWeatherByZIP">
      <wsdl:documentation>Allows you to get your City's Weather, which is updated hourly. U.S. Only</wsdl:documentation>
      <wsdl:input message="tns:GetCityWeatherByZIPSoapIn"/>
      <wsdl:output message="tns:GetCityWeatherByZIPSoapOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="WeatherHttpGet">
    <wsdl:operation name="GetWeatherInformation">
      <wsdl:documentation>Gets Information for each WeatherID</wsdl:documentation>
      <wsdl:input message="tns:GetWeatherInformationHttpGetIn"/>
      <wsdl:output message="tns:GetWeatherInformationHttpGetOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCityForecastByZIP">
      <wsdl:documentation>Allows you to get your City Forecast Over the Next 7 Days, which is updated hourly. U.S. Only</wsdl:documentation>
      <wsdl:input message="tns:GetCityForecastByZIPHttpGetIn"/>
      <wsdl:output message="tns:GetCityForecastByZIPHttpGetOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCityWeatherByZIP">
      <wsdl:documentation>Allows you to get your City's Weather, which is updated hourly. U.S. Only</wsdl:documentation>
      <wsdl:input message="tns:GetCityWeatherByZIPHttpGetIn"/>
      <wsdl:output message="tns:GetCityWeatherByZIPHttpGetOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="WeatherHttpPost">
    <wsdl:operation name="GetWeatherInformation">
      <wsdl:documentation>Gets Information for each WeatherID</wsdl:documentation>
      <wsdl:input message="tns:GetWeatherInformationHttpPostIn"/>
      <wsdl:output message="tns:GetWeatherInformationHttpPostOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCityForecastByZIP">
      <wsdl:documentation>Allows you to get your City Forecast Over the Next 7 Days, which is updated hourly. U.S. Only</wsdl:documentation>
      <wsdl:input message="tns:GetCityForecastByZIPHttpPostIn"/>
      <wsdl:output message="tns:GetCityForecastByZIPHttpPostOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCityWeatherByZIP">
      <wsdl:documentation>Allows you to get your City's Weather, which is updated hourly. U.S. Only</wsdl:documentation>
      <wsdl:input message="tns:GetCityWeatherByZIPHttpPostIn"/>
      <wsdl:output message="tns:GetCityWeatherByZIPHttpPostOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="WeatherSoap" type="tns:WeatherSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetWeatherInformation">
      <soap:operation soapAction="http://ws.cdyne.com/WeatherWS/GetWeatherInformation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCityForecastByZIP">
      <soap:operation soapAction="http://ws.cdyne.com/WeatherWS/GetCityForecastByZIP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCityWeatherByZIP">
      <soap:operation soapAction="http://ws.cdyne.com/WeatherWS/GetCityWeatherByZIP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WeatherSoap12" type="tns:WeatherSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetWeatherInformation">
      <soap12:operation soapAction="http://ws.cdyne.com/WeatherWS/GetWeatherInformation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCityForecastByZIP">
      <soap12:operation soapAction="http://ws.cdyne.com/WeatherWS/GetCityForecastByZIP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCityWeatherByZIP">
      <soap12:operation soapAction="http://ws.cdyne.com/WeatherWS/GetCityWeatherByZIP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WeatherHttpGet" type="tns:WeatherHttpGet">
    <http:binding verb="GET"/>
    <wsdl:operation name="GetWeatherInformation">
      <http:operation location="/GetWeatherInformation"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCityForecastByZIP">
      <http:operation location="/GetCityForecastByZIP"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCityWeatherByZIP">
      <http:operation location="/GetCityWeatherByZIP"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WeatherHttpPost" type="tns:WeatherHttpPost">
    <http:binding verb="POST"/>
    <wsdl:operation name="GetWeatherInformation">
      <http:operation location="/GetWeatherInformation"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCityForecastByZIP">
      <http:operation location="/GetCityForecastByZIP"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCityWeatherByZIP">
      <http:operation location="/GetCityWeatherByZIP"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="Weather">
    <wsdl:port name="WeatherSoap" binding="tns:WeatherSoap">
      <soap:address location="http://wsf.cdyne.com/WeatherWS/Weather.asmx"/>
    </wsdl:port>
    <wsdl:port name="WeatherSoap12" binding="tns:WeatherSoap12">
      <soap12:address location="http://wsf.cdyne.com/WeatherWS/Weather.asmx"/>
    </wsdl:port>
    <wsdl:port name="WeatherHttpGet" binding="tns:WeatherHttpGet">
      <http:address location="http://wsf.cdyne.com/WeatherWS/Weather.asmx"/>
    </wsdl:port>
    <wsdl:port name="WeatherHttpPost" binding="tns:WeatherHttpPost">
      <http:address location="http://wsf.cdyne.com/WeatherWS/Weather.asmx"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint></con:endpoints><con:operation id="0d2b2c9b-8edc-4ae1-8bb7-7eeb943c4da2" isOneWay="false" action="http://ws.cdyne.com/WeatherWS/GetCityForecastByZIP" name="GetCityForecastByZIP" bindingOperationName="GetCityForecastByZIP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="37df2b43-6acb-4763-9109-bb4f37ec31c6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetCityForecastByZIP>
         <!--Optional:-->
         <weat:ZIP>?</weat:ZIP>
      </weat:GetCityForecastByZIP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ws.cdyne.com/WeatherWS/GetCityForecastByZIP"/></con:call></con:operation><con:operation id="c5613eea-fcaa-4dc0-a150-65884738cfe0" isOneWay="false" action="http://ws.cdyne.com/WeatherWS/GetCityWeatherByZIP" name="GetCityWeatherByZIP" bindingOperationName="GetCityWeatherByZIP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="90588fef-2571-4a5a-9c85-cfb6701e42f2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetCityWeatherByZIP>
         <!--Optional:-->
         <weat:ZIP>?</weat:ZIP>
      </weat:GetCityWeatherByZIP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ws.cdyne.com/WeatherWS/GetCityWeatherByZIP"/></con:call></con:operation><con:operation id="67d0d645-75a6-468b-ab0b-8c16de75cd45" isOneWay="false" action="http://ws.cdyne.com/WeatherWS/GetWeatherInformation" name="GetWeatherInformation" bindingOperationName="GetWeatherInformation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c73d2a30-2a8e-401f-a185-24edd5a6f51b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetWeatherInformation/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ws.cdyne.com/WeatherWS/GetWeatherInformation"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="348402fc-780f-404a-833c-4213b7527168" wsaVersion="NONE" name="GlobalWeatherSoap" type="wsdl" bindingName="{http://www.webserviceX.NET}GlobalWeatherSoap" soapVersion="1_1" anonymous="optional" definition="http://www.webservicex.net/globalweather.asmx?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://www.webservicex.net/globalweather.asmx?WSDL"><con:part><con:url>http://www.webservicex.net/globalweather.asmx?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.webserviceX.NET" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://www.webserviceX.NET" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://www.webserviceX.NET">
      <s:element name="GetWeather">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CityName" type="s:string"/>
            <s:element minOccurs="0" maxOccurs="1" name="CountryName" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetWeatherResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetWeatherResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCitiesByCountry">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="CountryName" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCitiesByCountryResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCitiesByCountryResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="string" nillable="true" type="s:string"/>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="GetWeatherSoapIn">
    <wsdl:part name="parameters" element="tns:GetWeather"/>
  </wsdl:message>
  <wsdl:message name="GetWeatherSoapOut">
    <wsdl:part name="parameters" element="tns:GetWeatherResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCitiesByCountrySoapIn">
    <wsdl:part name="parameters" element="tns:GetCitiesByCountry"/>
  </wsdl:message>
  <wsdl:message name="GetCitiesByCountrySoapOut">
    <wsdl:part name="parameters" element="tns:GetCitiesByCountryResponse"/>
  </wsdl:message>
  <wsdl:message name="GetWeatherHttpGetIn">
    <wsdl:part name="CityName" type="s:string"/>
    <wsdl:part name="CountryName" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetWeatherHttpGetOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetCitiesByCountryHttpGetIn">
    <wsdl:part name="CountryName" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCitiesByCountryHttpGetOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetWeatherHttpPostIn">
    <wsdl:part name="CityName" type="s:string"/>
    <wsdl:part name="CountryName" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetWeatherHttpPostOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:message name="GetCitiesByCountryHttpPostIn">
    <wsdl:part name="CountryName" type="s:string"/>
  </wsdl:message>
  <wsdl:message name="GetCitiesByCountryHttpPostOut">
    <wsdl:part name="Body" element="tns:string"/>
  </wsdl:message>
  <wsdl:portType name="GlobalWeatherSoap">
    <wsdl:operation name="GetWeather">
      <wsdl:documentation>Get weather report for all major cities around the world.</wsdl:documentation>
      <wsdl:input message="tns:GetWeatherSoapIn"/>
      <wsdl:output message="tns:GetWeatherSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCitiesByCountry">
      <wsdl:documentation>Get all major cities by country name(full / part).</wsdl:documentation>
      <wsdl:input message="tns:GetCitiesByCountrySoapIn"/>
      <wsdl:output message="tns:GetCitiesByCountrySoapOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="GlobalWeatherHttpGet">
    <wsdl:operation name="GetWeather">
      <wsdl:documentation>Get weather report for all major cities around the world.</wsdl:documentation>
      <wsdl:input message="tns:GetWeatherHttpGetIn"/>
      <wsdl:output message="tns:GetWeatherHttpGetOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCitiesByCountry">
      <wsdl:documentation>Get all major cities by country name(full / part).</wsdl:documentation>
      <wsdl:input message="tns:GetCitiesByCountryHttpGetIn"/>
      <wsdl:output message="tns:GetCitiesByCountryHttpGetOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="GlobalWeatherHttpPost">
    <wsdl:operation name="GetWeather">
      <wsdl:documentation>Get weather report for all major cities around the world.</wsdl:documentation>
      <wsdl:input message="tns:GetWeatherHttpPostIn"/>
      <wsdl:output message="tns:GetWeatherHttpPostOut"/>
    </wsdl:operation>
    <wsdl:operation name="GetCitiesByCountry">
      <wsdl:documentation>Get all major cities by country name(full / part).</wsdl:documentation>
      <wsdl:input message="tns:GetCitiesByCountryHttpPostIn"/>
      <wsdl:output message="tns:GetCitiesByCountryHttpPostOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="GlobalWeatherSoap" type="tns:GlobalWeatherSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetWeather">
      <soap:operation soapAction="http://www.webserviceX.NET/GetWeather" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCitiesByCountry">
      <soap:operation soapAction="http://www.webserviceX.NET/GetCitiesByCountry" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="GlobalWeatherSoap12" type="tns:GlobalWeatherSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetWeather">
      <soap12:operation soapAction="http://www.webserviceX.NET/GetWeather" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCitiesByCountry">
      <soap12:operation soapAction="http://www.webserviceX.NET/GetCitiesByCountry" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="GlobalWeatherHttpGet" type="tns:GlobalWeatherHttpGet">
    <http:binding verb="GET"/>
    <wsdl:operation name="GetWeather">
      <http:operation location="/GetWeather"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCitiesByCountry">
      <http:operation location="/GetCitiesByCountry"/>
      <wsdl:input>
        <http:urlEncoded/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="GlobalWeatherHttpPost" type="tns:GlobalWeatherHttpPost">
    <http:binding verb="POST"/>
    <wsdl:operation name="GetWeather">
      <http:operation location="/GetWeather"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCitiesByCountry">
      <http:operation location="/GetCitiesByCountry"/>
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="GlobalWeather">
    <wsdl:port name="GlobalWeatherSoap" binding="tns:GlobalWeatherSoap">
      <soap:address location="http://www.webservicex.net/globalweather.asmx"/>
    </wsdl:port>
    <wsdl:port name="GlobalWeatherSoap12" binding="tns:GlobalWeatherSoap12">
      <soap12:address location="http://www.webservicex.net/globalweather.asmx"/>
    </wsdl:port>
    <wsdl:port name="GlobalWeatherHttpGet" binding="tns:GlobalWeatherHttpGet">
      <http:address location="http://www.webservicex.net/globalweather.asmx"/>
    </wsdl:port>
    <wsdl:port name="GlobalWeatherHttpPost" binding="tns:GlobalWeatherHttpPost">
      <http:address location="http://www.webservicex.net/globalweather.asmx"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://www.webservicex.net/globalweather.asmx</con:endpoint></con:endpoints><con:operation id="78f2cf15-71a3-4259-b646-d9fcb1a04aba" isOneWay="false" action="http://www.webserviceX.NET/GetCitiesByCountry" name="GetCitiesByCountry" bindingOperationName="GetCitiesByCountry" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f2088ddf-f854-44f8-a875-e0c35f7b35ff" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/globalweather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetCitiesByCountry>
         <!--Optional:-->
         <web:CountryName>?</web:CountryName>
      </web:GetCitiesByCountry>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webserviceX.NET/GetCitiesByCountry"/></con:call></con:operation><con:operation id="2504f485-2d55-4515-81ff-7b96f031f6f4" isOneWay="false" action="http://www.webserviceX.NET/GetWeather" name="GetWeather" bindingOperationName="GetWeather" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="94f90973-bb5a-42c9-bfd7-99d0d99c355a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/globalweather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetWeather>
         <!--Optional:-->
         <web:CityName>?</web:CityName>
         <!--Optional:-->
         <web:CountryName>?</web:CountryName>
      </web:GetWeather>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.webserviceX.NET/GetWeather"/></con:call></con:operation></con:interface><con:testSuite name="TestSuite1_Assertions" id="51a1411c-18e1-4d95-ab18-bdad0466dd6b"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Assertions" searchProperties="true" id="8e340e89-b5f1-4a23-8fdc-bbba654a11f1" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="Contains" id="f3b03aec-1c71-4907-a47a-4f72bd9702a2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CurrencyConvertorSoap</con:interface><con:operation>ConversionRate</con:operation><con:request name="Contains" id="4f83ab2b-9f23-4d21-8387-2e9251d5f2d5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.com/CurrencyConvertor.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET/">
   <soapenv:Header/>
   <soapenv:Body>
      <web:ConversionRate>
         <web:FromCurrency>USD</web:FromCurrency>
         <web:ToCurrency>INR</web:ToCurrency>
      </web:ConversionRate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Simple Contains" name="Contains" id="fa87b9d4-4309-4a96-9d15-9a083d3b55dd"><con:configuration><token>ConversionRateResult</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="NotContains" id="d357e6db-03ae-488b-8f59-ff31f893c532"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CurrencyConvertorSoap</con:interface><con:operation>ConversionRate</con:operation><con:request name="NotContains" id="22a8f272-8a0e-4054-83f1-b3487c1fb369"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.com/CurrencyConvertor.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET/">
   <soapenv:Header/>
   <soapenv:Body>
      <web:ConversionRate>
         <web:FromCurrency>?</web:FromCurrency>
         <web:ToCurrency>?</web:ToCurrency>
      </web:ConversionRate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Simple NotContains" name="Not Contains" id="9948130e-76c8-4073-91f9-48f83b07bdb2"><con:configuration><token>100</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="InvalidHttpStatusCodes" id="ddf74855-cb20-4727-b9fd-9616d3ef3df4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CurrencyConvertorSoap</con:interface><con:operation>ConversionRate</con:operation><con:request name="InvalidHttpStatusCodes" id="a51f9769-98c5-414d-bd82-f4c03c752402"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.com/CurrencyConvertor.asmx</con:endpoint><con:request><![CDATA[<!-- -->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET/">
   <soapenv:Header/>
   <soapenv:Body>
      <web:ConversionRate>
         <web:FromCurrency>USD</web:FromCurrency>
         <web:ToCurrency>INR</web:ToCurrency>
      </web:ConversionRate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes" id="349bf3f9-ab5a-4165-a098-f6c4de94810e"><con:configuration><codes>500</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ValidHttpStatusCodes" id="4ea57287-f0f3-4e3d-b440-5127a74ab38c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CurrencyConvertorSoap</con:interface><con:operation>ConversionRate</con:operation><con:request name="ValidHttpStatusCodes" id="2550edf6-d09c-4fb5-8835-306431ac6633"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.com/CurrencyConvertor.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET/">
   <soapenv:Header/>
   <soapenv:Body>
      <web:ConversionRate>
         <web:FromCurrency>USD</web:FromCurrency>
         <web:ToCurrency>INR</web:ToCurrency>
      </web:ConversionRate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="f0f82046-35db-499e-93b9-bcbede133bdd"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SOAPFault" id="677158f1-c099-404f-91e8-fd03cde7b32e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CurrencyConvertorSoap</con:interface><con:operation>ConversionRate</con:operation><con:request name="SOAPFault" id="58b1df80-0434-4695-94cb-30bbeb894fd0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.com/CurrencyConvertor.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET/">
   <soapenv:Header/>
   <soapenv:Body>
      <web:ConversionRate>
         <web:FromCurrency>USD</web:FromCurrency>
         <web:ToCurrency>INR</web:ToCurrency>
      </web:ConversionRate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault" id="7373acc1-ba63-4149-adc5-efc5ac4ea88d"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SOA" id="7b4aeda2-5de8-457a-937c-35f5a6eea033"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CurrencyConvertorSoap</con:interface><con:operation>ConversionRate</con:operation><con:request name="SOA" id="a5ef37ff-81e6-4bbc-987c-336610402c3d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.com/CurrencyConvertor.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET/">
   <soapenv:Header/>
   <soapenv:Body>
      <web:ConversionRate>
         <web:FromCurrency>USD</web:FromCurrency>
         <web:ToCurrency>INR</web:ToCurrency>
      </web:ConversionRate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Schema Compliance" name="Schema Compliance" id="f4360d20-d31d-43c8-a47a-5d45bb721b8c"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="NotSOAPFault" id="47204087-7a67-4ec8-aa92-5dfe1c8da2d6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CurrencyConvertorSoap</con:interface><con:operation>ConversionRate</con:operation><con:request name="NotSOAPFault" id="af4561df-6a6d-4616-af09-de134b54884f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.com/CurrencyConvertor.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET/">
   <soapenv:Header/>
   <soapenv:Body>
      <web:ConversionRate>
         <web:FromCurrency>USD</web:FromCurrency>
         <web:ToCurrency>INR</web:ToCurrency>
      </web:ConversionRate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="b4ab2e48-411f-434b-9e7f-8c91f7b9be33"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SOAPResponse" id="291f2129-fa90-4e1c-8a4f-9ef06ce5be08"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CurrencyConvertorSoap</con:interface><con:operation>ConversionRate</con:operation><con:request name="SOAPResponse" id="3d5a4f82-9680-4c0d-b2a8-19990945771c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.com/CurrencyConvertor.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET/">
   <soapenv:Header/>
   <soapenv:Body>
      <web:ConversionRate>
         <web:FromCurrency>USD</web:FromCurrency>
         <web:ToCurrency>INR</web:ToCurrency>
      </web:ConversionRate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5be6642a-bdf3-4a36-97d7-bb110e112208"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SLAResponse" id="b7d03266-2dad-4ef6-9d29-6092d1a87fc7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CurrencyConvertorSoap</con:interface><con:operation>ConversionRate</con:operation><con:request name="SLAResponse" id="512c43a0-62bd-4a27-9149-9d758eb21231"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.com/CurrencyConvertor.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET/">
   <soapenv:Header/>
   <soapenv:Body>
      <web:ConversionRate>
         <web:FromCurrency>USD</web:FromCurrency>
         <web:ToCurrency>INR</web:ToCurrency>
      </web:ConversionRate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Response SLA Assertion" name="Response SLA" id="69c27ffd-8619-43cd-bb23-28711fc3d995"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Combination1" id="9942d3f5-169f-40bd-bd5e-c131ff167173"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CurrencyConvertorSoap</con:interface><con:operation>ConversionRate</con:operation><con:request name="Combination1" id="3241675a-11c6-474a-b7c1-73621dc0e2fe"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.com/CurrencyConvertor.asmx</con:endpoint><con:request><![CDATA[<!--Comment section--><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET/">
   <soapenv:Header/>
   <soapenv:Body>
      <web:ConversionRate>
         <web:FromCurrency>USD</web:FromCurrency>
         <web:ToCurrency>INR</web:ToCurrency>
      </web:ConversionRate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Simple NotContains" name="Not Contains" id="8a2f7a2e-fb60-48da-a429-2a80e687e709"><con:configuration><token>62</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Response" id="f937dbc4-155b-4b35-9c36-7f94aa013b88"/><con:assertion type="Schema Compliance" id="fed6f4da-faf2-43b5-ada7-3e97f3aa1bf8"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" name="Response SLA" id="d7058e15-f2ad-4418-99a9-975fba3bec45"><con:configuration><SLA>1200</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="6496de8d-6796-4f1f-93f8-12eeca6f8e94"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes" id="b5d089a5-29ae-47dc-8a25-86e2b9ae7b26"><con:configuration><codes>500</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="c515f601-81ba-4637-acf3-a8af277a4eb1"/><con:assertion type="Not SOAP Fault Assertion" name="SOAP Fault" id="742b349e-70ce-435c-bcaf-131e9da5539e"/><con:assertion type="Simple Contains" name="Contains" id="b99138bf-ffe5-4000-a14b-380f3b330cb3"><con:configuration><token>ConversionRateResult</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="bb2a88a4-2073-44e6-8101-49157155e204" name="TestSuite2_XpathAssertion"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting><con:setting id="GeneratableJUnitReport@Folder">/Users/appledev/Documents/workspace/SOAP UI/SOAPUI_Material_Notes/Training_Material/TestData/Reports/TestSuite_Reports</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase id="2da12f20-6edb-4346-81b2-645571e14455" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase_XpathAssertion" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings><con:setting id="FlowLayout">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting><con:setting id="GeneratableJUnitReport@Folder">/Users/appledev/Documents/workspace/SOAP UI/SOAPUI_Material_Notes/Training_Material/TestData/Reports/TestSuite_Reports</con:setting></con:settings><con:testStep type="properties" name="TestData_Properties" id="cb6882b5-adda-42ce-b906-8f7a54abc7b8"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source/><con:properties><con:property><con:name>c1</con:name><con:value>5</con:value></con:property><con:property><con:name>c2</con:name><con:value>10</con:value></con:property><con:property><con:name>c3</con:name><con:value>15</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="ExpectedResult_Properties" id="2ac2a833-d0da-4e4b-bc8c-51eb835c0443"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source/><con:properties><con:property><con:name>F1</con:name><con:value>41</con:value></con:property><con:property><con:name>F2</con:name><con:value>50</con:value></con:property><con:property><con:name>F3</con:name><con:value>59</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="TestRequest_Convert_CelToFahrenhite_C1" id="9f79a632-70af-423a-9c1b-97136bdb121e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TemperatureConversionsSoapBinding</con:interface><con:operation>CelciusToFahrenheit</con:operation><con:request name="TestRequest_Convert_CelToFahrenhite_C1" id="6c4bfeaa-a139-4770-b162-7cf93f2340fa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.daehosting.com/services/TemperatureConversions.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://webservices.daehosting.com/temperature">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:CelciusToFahrenheit>
         <tem:nCelcius>${TestData_Properties#c1}</tem:nCelcius>
      </tem:CelciusToFahrenheit>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="XPath Match" id="eccd8fd1-94ec-44e9-b502-cdf15cf3782a" name="XPathMatchForC1_ValidateSingleNode_UsingProperties"><con:configuration><path>declare namespace m='http://webservices.daehosting.com/temperature';
//m:CelciusToFahrenheitResult[1]</path><content>41</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TestRequest_Convert_CelToFahrenhite_C2" id="177908c5-304b-425e-8b01-941ecbe7d36e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TemperatureConversionsSoapBinding</con:interface><con:operation>CelciusToFahrenheit</con:operation><con:request name="TestRequest_Convert_CelToFahrenhite_C2" id="7eb605ae-4069-4643-8da4-504c82b54d8c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.daehosting.com/services/TemperatureConversions.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://webservices.daehosting.com/temperature">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:CelciusToFahrenheit>
         <tem:nCelcius>${TestData_Properties#c2}</tem:nCelcius>
      </tem:CelciusToFahrenheit>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="XPath Match" id="85a40ebe-4fa0-4f70-aa5e-3ee3a1d2a60c" name="XPathMatchForC2_ValidateSingleNode_UsingProperties"><con:configuration><path>declare namespace m='http://webservices.daehosting.com/temperature';
//m:CelciusToFahrenheitResponse[1]/m:CelciusToFahrenheitResult[1]</path><content>${ExpectedResult_Properties#F2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TestRequest_Convert_CelToFahrenhite_C3" id="7382889f-a387-498b-b10a-e7ba63ac0329"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TemperatureConversionsSoapBinding</con:interface><con:operation>CelciusToFahrenheit</con:operation><con:request name="TestRequest_Convert_CelToFahrenhite_C3" id="5c9fcd77-1f18-482a-b8ed-f95f15b6b636"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.daehosting.com/services/TemperatureConversions.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://webservices.daehosting.com/temperature">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:CelciusToFahrenheit>
         <tem:nCelcius>${TestData_Properties#c3}</tem:nCelcius>
      </tem:CelciusToFahrenheit>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="XPath Match" id="dddf036b-0cd6-4b72-823a-27b64186f7ab" name="XPathMatchForC3_ValidateSingleNode_UsingProperties"><con:configuration><path>declare namespace m='http://webservices.daehosting.com/temperature';
//m:CelciusToFahrenheitResponse[1]/m:CelciusToFahrenheitResult[1]</path><content>${ExpectedResult_Properties#F3}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6f895cc6-4ba4-4440-ba53-51bf78d5135e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="3ef3936f-b275-4bff-9895-36047a9d6f57" name="TestSuite3_XpathAssertion_ResponseVerifications"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="082a62a9-4b1a-4311-883f-b41805b2a5c3" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase1_CompletelResponseVerification" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="datasource" name="DataSource" id="fa3984de-985a-4a03-99d4-4e47d5650e5f"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Excel"><con:configuration><file>/Users/appledev/Documents/workspace/SOAP UI/SOAPUI_Material_Notes/Training_Material/TestData/TestDataSource_Excel.xls</file><worksheet>Sheet2_For_CompleteResponseVerification</worksheet><cell>A2</cell><ignoreEmpty>false</ignoreEmpty></con:configuration></con:dataSource><con:property>Zip</con:property><con:property>ExpectedResult</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="request" name="Test Request" id="5cdbec02-a43d-4b06-9cc6-5322975f2786"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WeatherSoap</con:interface><con:operation>GetCityWeatherByZIP</con:operation><con:request name="Test Request" id="bc864170-3c17-435e-8b47-b17a52a261e9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetCityWeatherByZIP>
         <!--Optional:-->         
      <weat:ZIP>${DataSource#Zip}</weat:ZIP></weat:GetCityWeatherByZIP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9344e81f-9f6a-4b12-ad4d-73e1bd83b1db"/><con:assertion type="XPath Match" id="d48952ba-aaf6-4e2e-8958-3a962e1fe0be" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
//soap:Envelope[1]</path><content>${DataSource#ExpectedResult#declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/'; //soap:Envelope[1]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="datasink" name="DataSink" id="da69f690-9f52-40e5-870c-cb8e6675cf80"><con:settings/><con:config xsi:type="con:DataSinkStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSink type="Excel"><con:configuration><file>/Users/appledev/Documents/workspace/SOAP UI/SOAPUI_Material_Notes/Training_Material/TestData/TestDataSource_Excel.xls</file><outfile>/Users/appledev/Documents/workspace/SOAP UI/SOAPUI_Material_Notes/Training_Material/TestData/TestDataSource_Excel.xls</outfile><worksheet>Sheet2_For_CompleteResponseVerification</worksheet><cell>C2</cell></con:configuration></con:dataSink><con:properties><con:property><con:name>ActualResult</con:name><con:value>${Test Request#Response#declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/'; //soap:Envelope[1]}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="b60df334-02ae-461b-a6c2-bcb431dadd44"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>Test Request</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6a1a2a0c-2229-4143-858e-6353f33843b9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e355e6a-ebbe-4af7-a0dc-dc6216c0907b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a530eaf9-7910-499b-9a75-df4edf1122d2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="9e892873-0823-41d2-a5f8-800720abb46b" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase2_MultipleNodesVerifications_OutofCompletelResponse" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="datasource" name="DataSource" id="cf9d9e02-740c-490d-b22d-0c856548188c"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Excel"><con:configuration><file>/Users/appledev/Documents/workspace/SOAP UI/SOAPUI_Material_Notes/Training_Material/TestData/TestDataSource_Excel.xls</file><worksheet>Sheet3_For_MultipleNodes_OutofCompletelResponse_Verification</worksheet><cell>A2</cell><ignoreEmpty>false</ignoreEmpty></con:configuration></con:dataSource><con:property>Zip</con:property><con:property>ExpectedResult</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="request" name="Test Request" id="5c7c0fb7-8967-46d2-98db-196ad035d554"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WeatherSoap</con:interface><con:operation>GetCityWeatherByZIP</con:operation><con:request name="Test Request" id="bc864170-3c17-435e-8b47-b17a52a261e9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetCityWeatherByZIP>
         <!--Optional:-->         
      <weat:ZIP>${DataSource#Zip}</weat:ZIP></weat:GetCityWeatherByZIP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9344e81f-9f6a-4b12-ad4d-73e1bd83b1db"/><con:assertion type="XPath Match" id="a655c52f-ae4e-451f-a82b-16a2970d4223" name="XPathMatch1_VerificationOf_StringSuccess"><con:configuration><path>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:Success[1]</path><content>${DataSource#ExpectedResult#declare namespace ns1='http://ws.cdyne.com/WeatherWS/'; //ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:Success[1]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="f68a530b-63d2-4377-876f-1df069fe9b13" name="XPathMatch2_VerificationOf_CityName"><con:configuration><path>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:City[1]</path><content>${DataSource#ExpectedResult#declare namespace ns1='http://ws.cdyne.com/WeatherWS/'; //ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:City[1]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="54e4aea4-78e0-41ba-bc6b-52fd860383ed" name="XPathMatch3_VerificationOf_WeatherId"><con:configuration><path>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:State[1]</path><content>${DataSource#ExpectedResult#declare namespace ns1='http://ws.cdyne.com/WeatherWS/'; //ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:State[1]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="datasink" name="DataSink" id="78c36a8b-05a4-48b4-9d95-4a6f8be5c4cf"><con:settings/><con:config xsi:type="con:DataSinkStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSink type="Excel"><con:configuration><file>/Users/appledev/Documents/workspace/SOAP UI/SOAPUI_Material_Notes/Training_Material/TestData/TestDataSource_Excel.xls</file><outfile>/Users/appledev/Documents/workspace/SOAP UI/SOAPUI_Material_Notes/Training_Material/TestData/TestDataSource_Excel.xls</outfile><worksheet>Sheet3_For_MultipleNodes_OutofCompletelResponse_Verification</worksheet><cell>C2</cell></con:configuration></con:dataSink><con:properties><con:property><con:name>ActualResult</con:name><con:value>${Test Request#Response#declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/'; //soap:Envelope[1]}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="5cba031e-6142-4256-84d8-e72802d106ad"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>Test Request</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6a1a2a0c-2229-4143-858e-6353f33843b9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e355e6a-ebbe-4af7-a0dc-dc6216c0907b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a530eaf9-7910-499b-9a75-df4edf1122d2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="090b4496-3c09-4ec3-b2aa-a76d99c014e0" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase3_IndividualNodesVerfications_WithIndividualResponse" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="datasource" name="DataSource" id="9f9e2258-68d9-4844-940f-ae0257025515"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Excel"><con:configuration><file>/Users/appledev/Documents/workspace/SOAP UI/SOAPUI_Material_Notes/Training_Material/TestData/TestDataSource_Excel.xls</file><worksheet>Sheet4_For_IndividualNodesVerification</worksheet><cell>A2</cell><ignoreEmpty>false</ignoreEmpty></con:configuration></con:dataSource><con:property>Zip</con:property><con:property>ExpectedResult</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="request" name="Test Request" id="a1e36aba-02b8-4068-ae9e-3b5d82ada07c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WeatherSoap</con:interface><con:operation>GetCityWeatherByZIP</con:operation><con:request name="Test Request" id="bc864170-3c17-435e-8b47-b17a52a261e9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetCityWeatherByZIP>
         <!--Optional:-->         
      <weat:ZIP>${DataSource#Zip}</weat:ZIP></weat:GetCityWeatherByZIP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9344e81f-9f6a-4b12-ad4d-73e1bd83b1db"/><con:assertion type="XPath Match" id="f68a530b-63d2-4377-876f-1df069fe9b13" name="XPathMatch2_VerificationOf_CityName"><con:configuration><path>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:City[1]</path><content>${DataSource#ExpectedResult}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="datasink" name="DataSink" id="035caf78-8548-46d7-b47c-de69fe9eda42"><con:settings/><con:config xsi:type="con:DataSinkStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSink type="Excel"><con:configuration><file>/Users/appledev/Documents/workspace/SOAP UI/SOAPUI_Material_Notes/Training_Material/TestData/TestDataSource_Excel.xls</file><outfile>/Users/appledev/Documents/workspace/SOAP UI/SOAPUI_Material_Notes/Training_Material/TestData/TestDataSource_Excel.xls</outfile><worksheet>Sheet4_For_IndividualNodesVerification</worksheet><cell>C2</cell></con:configuration></con:dataSink><con:properties><con:property><con:name>ActualResult</con:name><con:value>${Test Request#Response#declare namespace ns1='http://ws.cdyne.com/WeatherWS/'; //ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:City[1]}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="e835313f-c3e4-44ae-b5de-b7867070e67f"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>Test Request</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6a1a2a0c-2229-4143-858e-6353f33843b9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e355e6a-ebbe-4af7-a0dc-dc6216c0907b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a530eaf9-7910-499b-9a75-df4edf1122d2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="e8ccedbf-bcda-42ad-8519-1c1fda12c211" name="TestSuite4_MessageContentAssertion"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="77a7cc3a-979d-444a-88a7-ef9ab7c31c8b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MessageContentAssertion_UsedIn_RegularCase" searchProperties="true"><con:settings/><con:testStep type="request" name="TestRequest_GetCityWeatherByZip" id="31c9d0b2-2ccd-4555-b40a-7b4c76401c2b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WeatherSoap</con:interface><con:operation>GetCityWeatherByZIP</con:operation><con:request name="TestRequest_GetCityWeatherByZip" id="88eb45c6-1999-48e8-b5d6-a36959fff8eb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetCityWeatherByZIP><weat:ZIP>95054</weat:ZIP></weat:GetCityWeatherByZIP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ab1ca79c-65eb-448f-9f8f-4917269fe14f"/><con:assertion type="MessageContentAssertion" id="8f83c190-4cbe-45c4-949f-daac5b568135" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:Success[1]</con:xpath><con:element>Success</con:element><con:type>XmlBoolean</con:type><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:ResponseText[1]</con:xpath><con:element>ResponseText</con:element><con:type>XmlString</con:type><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>City Found</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:State[1]</con:xpath><con:element>State</con:element><con:type>XmlString</con:type><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>CA</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:City[1]</con:xpath><con:element>City</con:element><con:type>XmlString</con:type><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Santa Clara</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:WeatherStationCity[1]</con:xpath><con:element>WeatherStationCity</con:element><con:type>XmlString</con:type><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Hayward</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]</con:xpath><con:element>GetCityWeatherByZIPResponse</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>
         </con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
   <soap:Body>
      <GetCityWeatherByZIPResponse xmlns="http://ws.cdyne.com/WeatherWS/">
         <GetCityWeatherByZIPResult>
            <Success>true</Success>
            <ResponseText>City Found</ResponseText>
            <State>CA</State>
            <City>Santa Clara</City>
            <WeatherStationCity>Hayward</WeatherStationCity>
            <WeatherID>14</WeatherID>
            <Description>Cloudy</Description>
            <Temperature>63</Temperature>
            <RelativeHumidity>93</RelativeHumidity>
            <Wind>W8</Wind>
            <Pressure>29.98R</Pressure>
            <Visibility/>
            <WindChill/>
            <Remarks/>
         </GetCityWeatherByZIPResult>
      </GetCityWeatherByZIPResponse>
   </soap:Body>
</soap:Envelope>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>7c38b009-a54a-47cd-a873-49ca5fc95fe5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="b90dd467-1472-453a-a1d6-abb1845a3650" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MessageContentAssertion_UsedIn_DataDrivenTestCase" searchProperties="true"><con:settings/><con:testStep type="datasource" name="DataSource" id="26821410-2d13-4071-ad1e-096738b48a45"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">95054</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Santa Clara</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CA</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">94040</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">Mountain View</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CA</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">95113</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">San Jose</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">CA</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>Zip</con:property><con:property>Expected_City</con:property><con:property>Expected_Success</con:property><con:property>Expected_State</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="request" name="Test Request" id="27e0ff47-8b3a-4dd9-9140-770273992c8d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WeatherSoap</con:interface><con:operation>GetCityWeatherByZIP</con:operation><con:request name="Test Request" id="9ee20fa7-ea91-4637-9195-dd39b01a18d4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetCityWeatherByZIP><weat:ZIP>${DataSource#Zip}</weat:ZIP></weat:GetCityWeatherByZIP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="85390a4c-a678-4d8e-baf5-35a96581bd56"/><con:assertion type="MessageContentAssertion" id="9dd1a9a3-e575-48c1-b2b9-02e27cbf66f3" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:Success[1]</con:xpath><con:element>Success</con:element><con:type>XmlBoolean</con:type><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${DataSource#Expected_Success}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:City[1]</con:xpath><con:element>City</con:element><con:type>XmlString</con:type><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${DataSource#Expected_City}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:State[1]</con:xpath><con:element>State</con:element><con:type>XmlString</con:type><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${DataSource#Expected_State}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:ResponseText[1]</con:xpath><con:element>ResponseText</con:element><con:type>XmlString</con:type><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
   <soap:Body>
      <GetCityWeatherByZIPResponse xmlns="http://ws.cdyne.com/WeatherWS/">
         <GetCityWeatherByZIPResult>
            <Success>true</Success>
            <ResponseText>City Found</ResponseText>
            <State>CA</State>
            <City>San Jose</City>
            <WeatherStationCity>Hayward</WeatherStationCity>
            <WeatherID>14</WeatherID>
            <Description>Cloudy</Description>
            <Temperature>63</Temperature>
            <RelativeHumidity>93</RelativeHumidity>
            <Wind>W8</Wind>
            <Pressure>29.98R</Pressure>
            <Visibility/>
            <WindChill/>
            <Remarks/>
         </GetCityWeatherByZIPResult>
      </GetCityWeatherByZIPResponse>
   </soap:Body>
</soap:Envelope>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="befbf64e-23ed-47cc-8c23-f717f89fbe52"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>Test Request</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>89e88515-3ef6-4741-9bd8-ca7232ac4ab7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="e8cd36eb-6866-4a32-9b23-416d869113e5" name="TestSuite5_ManualTestStep"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="023912bb-3c20-4a5d-8fda-9e2252069007" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase_ManualTestStep" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="datasource" name="DataSource" id="c56c9ca7-3334-4f68-923e-620517555bf5"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Excel"><con:configuration><file>/Users/appledev/Documents/workspace/SOAP UI/SOAPUI_Material_Notes/Training_Material/TestData/ManualTestStep.xls</file><worksheet>Sheet1</worksheet><cell>A2</cell><ignoreEmpty>false</ignoreEmpty></con:configuration></con:dataSource><con:property>From</con:property><con:property>To</con:property><con:property>Expected</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="request" name="Test Request" id="c820a2a8-fe62-41b6-9c90-8add05fa888b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CurrencyConvertorSoap</con:interface><con:operation>ConversionRate</con:operation><con:request name="Test Request" id="c79f71e8-eb81-463d-8171-674a6d40fdc2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.com/CurrencyConvertor.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET/">
   <soapenv:Header/>
   <soapenv:Body>
      <web:ConversionRate>
         <web:FromCurrency>${DataSource#From}</web:FromCurrency>
         <web:ToCurrency>${DataSource#To}</web:ToCurrency>
      </web:ConversionRate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="4bfbf6c1-f1d1-4e6f-abf8-ed9fbf7862a6"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="manualTestStep" name="Manual TestStep" id="8e62087f-5451-4fd9-9a99-cc7b2064ad94"><con:description>From=${DataSource#From}
To=${DataSource#To}</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Expected=${DataSource#Expected}
Actual=${Test Request#Response#declare namespace ns1='http://www.webserviceX.NET/'; //ns1:ConversionRateResponse[1]/ns1:ConversionRateResult[1]}</con:expectedResult></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="1cbff7a3-6be0-49c0-abd1-00753c7848e9"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>Test Request</targetStep></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>a91e87bf-8550-468b-b6ed-44231fad029b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5eed468-7afc-4050-857c-2ec1ed24a7ca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="42e128f9-bd98-474e-9f74-bbb2f346725d" name="TestSuite6_AssertionTestStep"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase id="54991fa3-5a6f-4b63-ae60-0b5ccf2301b0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase1" searchProperties="true"><con:settings/><con:testStep type="request" name="Test Request1" id="46e44028-ecd4-4131-9693-5be7b551dffa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WeatherSoap</con:interface><con:operation>GetCityWeatherByZIP</con:operation><con:request name="Test Request1" id="0900a9b9-5831-4f74-ba32-ee32931caa18"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetCityWeatherByZIP><weat:ZIP>95054</weat:ZIP></weat:GetCityWeatherByZIP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7529acc1-a4c1-4efd-9d4f-a5d75b2f4d0b"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Test Request2" id="d9f29dee-43e5-48dc-a1ef-8ad41c84b9d0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WeatherSoap</con:interface><con:operation>GetCityWeatherByZIP</con:operation><con:request name="Test Request2" id="10dda7a9-7c45-4a24-ab3c-45143d34c687"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetCityWeatherByZIP><weat:ZIP>94040</weat:ZIP></weat:GetCityWeatherByZIP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6976c428-1c93-42be-9bbc-76b4b8f6f9e1"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="assertionteststep" name="Assertion TestStep" id="8a3c9952-94d8-4647-baa9-9e32a64dd2a9"><con:settings/><con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:entry><con:id>20406a70-9f98-4a8b-ac44-23d56f3dc634</con:id><con:isGroup>true</con:isGroup><con:sourceId>8a3c9952-94d8-4647-baa9-9e32a64dd2a9</con:sourceId><con:propertyName>Group</con:propertyName><con:assertion type="GroupAssertion" name="Group" id="2fc6a484-015b-435c-a81b-6dee32de193e"><con:configuration xsi:type="con:GroupAssertionList"><con:assertions><con:id>870160ec-bcf8-4477-bcfa-d49d53d04e72</con:id><con:isGroup>true</con:isGroup><con:sourceId>01ad403f-3d34-4f9c-9190-444efe505cde</con:sourceId><con:propertyName>Group</con:propertyName><con:assertion type="GroupAssertion" name="Group_NamedContains" id="aa9ca378-73f1-4fd2-92fb-d86b3953549b"><con:configuration xsi:type="con:GroupAssertionList"><con:assertions><con:id>3320d487-fa72-4623-9e10-42eb0789f890</con:id><con:isGroup>false</con:isGroup><con:sourceId>435d7c71-d12a-4e1c-84fb-52a436d2b23b</con:sourceId><con:propertyName>Response</con:propertyName><con:assertion type="Simple Contains" name="Contains" id="f0eaa5b7-40d3-425a-ae59-12a925c77f59"><con:configuration><token>City Found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:assertions><con:assertions><con:id>a009385e-add2-4742-b1e7-41477c29171f</con:id><con:isGroup>false</con:isGroup><con:sourceId>ec36cc40-528a-4efc-a0ec-0d81a6906aec</con:sourceId><con:propertyName>Response</con:propertyName><con:assertion type="Simple Contains" name="Contains 2" id="a978f8aa-e332-44ec-aca9-35e594b65153"><con:configuration><token>City Found1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:assertions><con:operation>OR</con:operation></con:configuration></con:assertion></con:assertions><con:assertions><con:id>73ec5d1b-b8cf-4bcb-b890-ef9858e9d65a</con:id><con:isGroup>true</con:isGroup><con:sourceId>01ad403f-3d34-4f9c-9190-444efe505cde</con:sourceId><con:propertyName>Group</con:propertyName><con:assertion type="GroupAssertion" name="Group_Named_MessageContent" id="4271a869-a6c4-4aca-99f9-f1b222516759"><con:configuration xsi:type="con:GroupAssertionList"><con:assertions><con:id>3ba25c9d-d44f-450b-98a9-3f29d2976f5c</con:id><con:isGroup>false</con:isGroup><con:sourceId>435d7c71-d12a-4e1c-84fb-52a436d2b23b</con:sourceId><con:propertyName>Response</con:propertyName><con:assertion type="MessageContentAssertion" name="Message Content Assertion" id="e93894f4-cf30-4b9e-8220-d4ddd8abb51d"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:Success[1]</con:xpath><con:element>Success</con:element><con:type>XmlBoolean</con:type><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
   <soap:Body>
      <GetCityWeatherByZIPResponse xmlns="http://ws.cdyne.com/WeatherWS/">
         <GetCityWeatherByZIPResult>
            <Success>true</Success>
            <ResponseText>City Found</ResponseText>
            <State>CA</State>
            <City>Santa Clara</City>
            <WeatherStationCity>Hayward</WeatherStationCity>
            <WeatherID>14</WeatherID>
            <Description>Cloudy</Description>
            <Temperature>63</Temperature>
            <RelativeHumidity>93</RelativeHumidity>
            <Wind>W8</Wind>
            <Pressure>29.98R</Pressure>
            <Visibility/>
            <WindChill/>
            <Remarks/>
         </GetCityWeatherByZIPResult>
      </GetCityWeatherByZIPResponse>
   </soap:Body>
</soap:Envelope>]]></con:originalMessage></con:configuration></con:assertion></con:assertions><con:assertions><con:id>da459e5e-09bc-4d09-bb72-3c084446ff07</con:id><con:isGroup>false</con:isGroup><con:sourceId>ec36cc40-528a-4efc-a0ec-0d81a6906aec</con:sourceId><con:propertyName>Response</con:propertyName><con:assertion type="MessageContentAssertion" name="Message Content Assertion 2" id="ec2158b3-8d7c-4f11-89b2-810790f89c75"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:Success[1]</con:xpath><con:element>Success</con:element><con:type>XmlBoolean</con:type><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>true1</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
   <soap:Body>
      <GetCityWeatherByZIPResponse xmlns="http://ws.cdyne.com/WeatherWS/">
         <GetCityWeatherByZIPResult>
            <Success>true</Success>
            <ResponseText>City Found</ResponseText>
            <State>CA</State>
            <City>Santa Clara</City>
            <WeatherStationCity>Hayward</WeatherStationCity>
            <WeatherID>14</WeatherID>
            <Description>Cloudy</Description>
            <Temperature>63</Temperature>
            <RelativeHumidity>93</RelativeHumidity>
            <Wind>W8</Wind>
            <Pressure>29.98R</Pressure>
            <Visibility/>
            <WindChill/>
            <Remarks/>
         </GetCityWeatherByZIPResult>
      </GetCityWeatherByZIPResponse>
   </soap:Body>
</soap:Envelope>]]></con:originalMessage></con:configuration></con:assertion></con:assertions><con:operation>AND</con:operation></con:configuration></con:assertion></con:assertions><con:operation>OR</con:operation></con:configuration></con:assertion></con:entry></con:config></con:testStep><con:testStep type="assertionteststep" name="Assertion TestStep 1" id="fad7e6b6-d12d-47ef-85ff-c96a4fb1dc41"><con:settings/><con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="2cc9cadf-62b8-4ff6-ac58-5a6b06d987ec" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase2" searchProperties="true"><con:settings/><con:testStep type="request" name="Test Request1" id="e9033e31-cd8f-4aca-92af-6bbef3c6eb3e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WeatherSoap</con:interface><con:operation>GetCityWeatherByZIP</con:operation><con:request name="Test Request1" id="0900a9b9-5831-4f74-ba32-ee32931caa18"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetCityWeatherByZIP><weat:ZIP>95054</weat:ZIP></weat:GetCityWeatherByZIP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7529acc1-a4c1-4efd-9d4f-a5d75b2f4d0b"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Test Request2" id="655aa7f7-ef64-45a2-9a4a-b29a1928d980"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WeatherSoap</con:interface><con:operation>GetCityWeatherByZIP</con:operation><con:request name="Test Request2" id="10dda7a9-7c45-4a24-ab3c-45143d34c687"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetCityWeatherByZIP><weat:ZIP>94040</weat:ZIP></weat:GetCityWeatherByZIP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6976c428-1c93-42be-9bbc-76b4b8f6f9e1"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="assertionteststep" name="Assertion TestStep" id="3b6294b5-ceaf-4b24-b469-2173419e0b89"><con:settings/><con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:entry><con:id>83582bd0-43f2-45fe-ab5f-26255ec49682</con:id><con:isGroup>true</con:isGroup><con:sourceId>3b6294b5-ceaf-4b24-b469-2173419e0b89</con:sourceId><con:propertyName>Group</con:propertyName><con:assertion type="GroupAssertion" name="Group_Main" id="efcb622e-66c3-4a67-a349-f7e112f4f1d4"><con:configuration xsi:type="con:GroupAssertionList"><con:assertions><con:id>59c5adc8-c878-43f4-a01f-c8ad3d7074ff</con:id><con:isGroup>true</con:isGroup><con:sourceId>e8a57813-605e-4623-8580-f8d20c5db239</con:sourceId><con:propertyName>Group</con:propertyName><con:assertion type="GroupAssertion" name="Group_Named_Assertion" id="aa35194b-836d-46ad-a65d-8c90bc0e7d0a"><con:configuration xsi:type="con:GroupAssertionList"><con:assertions><con:id>43ba8862-8a34-40ec-bacb-8334f98b260d</con:id><con:isGroup>false</con:isGroup><con:sourceId>2d2b538f-88a5-4ef1-b3c7-4d1b9024c604</con:sourceId><con:propertyName>Response</con:propertyName><con:assertion type="Simple Contains" name="Contains" id="bfd9c707-fcd4-42bd-805d-66f216964b60"><con:configuration><token>City Found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:assertions><con:assertions><con:id>3071f044-1c79-4576-b87e-2b94e8d435a9</con:id><con:isGroup>false</con:isGroup><con:sourceId>218d8938-7284-463c-ad6f-9b065112f340</con:sourceId><con:propertyName>Response</con:propertyName><con:assertion type="Simple Contains" name="Contains 2" id="8983ba9f-0a36-4007-9700-258822b3bd15"><con:configuration><token>City Found2</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:assertions><con:operation>AND</con:operation></con:configuration></con:assertion></con:assertions><con:assertions><con:id>95477054-42a4-4f6e-96f2-0357bd8a31f8</con:id><con:isGroup>true</con:isGroup><con:sourceId>e8a57813-605e-4623-8580-f8d20c5db239</con:sourceId><con:propertyName>Group</con:propertyName><con:assertion type="GroupAssertion" name="Group_Named_XpathAssertion" id="4c5838e1-7999-4358-b6a1-e35ae7995a02"><con:configuration xsi:type="con:GroupAssertionList"><con:assertions><con:id>10fae66c-03fa-44da-aa5a-50bd8db6e8aa</con:id><con:isGroup>false</con:isGroup><con:sourceId>2d2b538f-88a5-4ef1-b3c7-4d1b9024c604</con:sourceId><con:propertyName>Response</con:propertyName><con:assertion type="XPath Match" name="XPath Match" id="a781321d-5102-4842-99ff-6ad966c3f1d7"><con:configuration><path>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:City[1]</path><content>Santa Clara</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion></con:assertions><con:assertions><con:id>754f565a-ff7c-4099-9869-092d7b81229a</con:id><con:isGroup>false</con:isGroup><con:sourceId>218d8938-7284-463c-ad6f-9b065112f340</con:sourceId><con:propertyName>Response</con:propertyName><con:assertion type="XPath Match" name="XPath Match 2" id="e0086e82-020d-4696-8e60-a93780fca401"><con:configuration><path>declare namespace ns1='http://ws.cdyne.com/WeatherWS/';
//ns1:GetCityWeatherByZIPResponse[1]/ns1:GetCityWeatherByZIPResult[1]/ns1:City[1]</path><content>Mountain View2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion></con:assertions><con:operation>OR</con:operation></con:configuration></con:assertion></con:assertions><con:operation>OR</con:operation></con:configuration></con:assertion></con:entry></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>e8a57813-605e-4623-8580-f8d20c5db239</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="51fae69b-5705-4fc9-9085-d9b4de2b9a29" name="TestSuite7_Attachment"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e70a22ad-0fba-4c35-a905-e0a13696c120" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase1_AttachFiles" searchProperties="true"><con:settings/><con:testStep type="request" name="Test Request" id="1ec63cf2-415c-4c8d-908b-3459b3113353"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TemperatureConversionsSoapBinding</con:interface><con:operation>CelciusToFahrenheit</con:operation><con:request name="Test Request" id="181b1b4e-1969-413a-8d9c-e245b51b2f28" useWsAddressing="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.daehosting.com/services/TemperatureConversions.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://webservices.daehosting.com/temperature">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:CelciusToFahrenheit>
         <tem:nCelcius>Brazil.png</tem:nCelcius>
      </tem:CelciusToFahrenheit>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Simple Contains" id="2671e0b6-a22d-47ff-8d49-fa2358f6d571" name="Contains"><con:configuration><token>The server cannot service the request because the media type is unsupported.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>Argentina.png</con:name><con:contentType>image/x-png</con:contentType><con:size>42260</con:size><con:contentId>Argentina.png</con:contentId><con:data></con:data><con:id>ffd3f843-461c-476f-b333-c155ba90cbeb</con:id></con:attachment><con:attachment><con:name>Brazil.png</con:name><con:contentType>image/x-png</con:contentType><con:contentId>Brazil.png</con:contentId><con:url>/Users/appledev/Pictures/iChat Icons/Flags/Brazil.png</con:url><con:id>0cbc099f-2119-4f92-8a55-56984f3655f5</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" addDefaultAction="true" addDefaultTo="false"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="5ebdacee-cc37-45a0-aed0-7d26046e6fdb" name="TestSuite8_Regex"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="bc4c0287-93bd-4b51-aa21-705040f559ea" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase_RegexExpression1" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="Test Request" id="63c903ff-c73c-47bd-8c48-acf81b9bd1bc"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WeatherSoap</con:interface><con:operation>GetCityWeatherByZIP</con:operation><con:request name="Test Request" id="525d7e5f-722b-4bc7-a867-da4c9328cdf4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://wsf.cdyne.com/WeatherWS/Weather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:weat="http://ws.cdyne.com/WeatherWS/">
   <soapenv:Header/>
   <soapenv:Body>
      <weat:GetCityWeatherByZIP>
         <!--Optional:-->
         <weat:ZIP>12401</weat:ZIP>
      </weat:GetCityWeatherByZIP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ff14b0a3-b9d3-454b-9313-f50fc3117092"/><con:assertion type="Simple Contains" id="ff600e10-d9be-4799-b1e1-2d65ba8836de" name="Contains_Regex1"><con:configuration><token>(?s).*&lt;Success>true.*|(?s).*&lt;City Found>true.*</token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b8d879d7-d92d-4af6-b388-3f96fc714584" name="Contains1_Regex2"><con:configuration><token>(?s).*&lt;State>NY.*|.*&lt;City>Kingston.*</token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="870fde59-1a97-4b18-b222-dcdeae417f2f" name="Contains"><con:configuration><token>(?s).*&lt;State>NY.*
|.*&lt;City>Kingston.*</token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9a48386a-c3e5-4a67-a9b1-94e9aa7b552e" name="Contains_regex4"><con:configuration><token>(?s).*&lt;Success>true&lt;/Success>.*</token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="e21ed7a6-235a-4c93-8c19-7ff9bc9771c7" name="TestSuite9_CDATA_ListResponses_PropertyTransfers"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="0a825dd6-df6e-48d9-914f-7617bbad8ced" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase1_ListResponses_PropertyTransfers" searchProperties="true"><con:settings/><con:testStep type="request" name="Test Request" id="3c87d53c-8aa6-4af4-8304-b37d573d67b0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GlobalWeatherSoap</con:interface><con:operation>GetCitiesByCountry</con:operation><con:request name="Test Request" id="667940cf-ccd2-4747-a082-7129da1e753f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/globalweather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetCitiesByCountry><web:CountryName>india</web:CountryName></web:GetCitiesByCountry>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="67ca0d7d-54bc-4425-92bb-97032b47cc08"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="64db2981-ebbd-4fd4-a343-feb9ab72ffc9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Countrys_List</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Test Request</con:sourceStep><con:sourcePath>declare namespace ns1='http://www.webserviceX.NET';
//ns1:GetCitiesByCountryResponse[1]/ns1:GetCitiesByCountryResult[1]</con:sourcePath><con:targetType>CustomProperty_Country</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Country</con:name><con:sourceType>CustomProperty_Country</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:sourcePath>//NewDataSet[1]/Table[2]/Country[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Test Request2</con:targetStep><con:targetPath>declare namespace web='http://www.webserviceX.NET';
//web:GetWeather[1]/web:CountryName[1]</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Citys_List</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Test Request</con:sourceStep><con:sourcePath>declare namespace ns1='http://www.webserviceX.NET';
//ns1:GetCitiesByCountryResponse[1]/ns1:GetCitiesByCountryResult[1]</con:sourcePath><con:targetType>CustomProperty_City</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>City</con:name><con:sourceType>CustomProperty_City</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:sourcePath>//NewDataSet[1]/Table[2]/City[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Test Request2</con:targetStep><con:targetPath>declare namespace web='http://www.webserviceX.NET';
//web:GetWeather[1]/web:CityName[1]</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Test Request2" id="518e2e54-5740-40f3-96db-1504b2625027"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GlobalWeatherSoap</con:interface><con:operation>GetWeather</con:operation><con:request name="Test Request2" id="6e3bedd9-5e14-46c3-9e02-90e0532ce4f6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://www.webservicex.net/globalweather.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.webserviceX.NET">
   <soapenv:Header/>
   <soapenv:Body>
      <web:GetWeather><web:CityName>Ahmadabad</web:CityName><web:CountryName>India</web:CountryName></web:GetWeather>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Simple Contains" id="f74b91c0-b27f-4d3d-a852-a97b2e8e0fc6" name="Contains"><con:configuration><token>Ahmadabad, India</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="7cd30f95-62b4-44f3-b9d5-6f1c65f0177d" name="Not Contains"><con:configuration><token>Hyderabad, India</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>CustomProperty_Country</con:name><con:value><![CDATA[<NewDataSet>
  <Table>
    <Country>British Indian Ocean Territory</Country>
    <City>Diego Garcia</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Ahmadabad</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Akola</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Aurangabad Chikalthan Aerodrome</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Bombay / Santacruz</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Bilaspur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Bhuj-Rudramata</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Belgaum / Sambra</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Bhopal / Bairagarh</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Bhaunagar</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Goa / Dabolim Airport</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Indore</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Jabalpur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Khandwa</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Kolhapur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Nagpur Sonegaon</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Rajkot</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Sholapur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Agartala</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Siliguri</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Bhubaneswar</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Calcutta / Dum Dum</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Car Nicobar</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Gorakhpur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Gauhati</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Gaya</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Imphal Tulihal</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Jharsuguda</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Jamshedpur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>North Lakhimpur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Dibrugarh / Mohanbari</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Port Blair</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Patna</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>M. O. Ranchi</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Agra</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Allahabad / Bamhrauli</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Amritsar</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Varanasi / Babatpur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Bareilly</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Kanpur / Chakeri</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>New Delhi / Safdarjung</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>New Delhi / Palam</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Gwalior</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Hissar</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Jhansi</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Jodhpur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Jaipur / Sanganer</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Kota Aerodrome</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Lucknow / Amausi</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Satna</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Udaipur Dabok</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Bellary</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Vijayawada / Gannavaram</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Coimbatore / Peelamedu</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Cochin / Willingdon</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Cuddapah</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Hyderabad Airport</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Madurai</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Mangalore / Bajpe</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Madras / Minambakkam</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Tiruchchirapalli</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Thiruvananthapuram</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Vellore</City>
  </Table>
</NewDataSet>]]></con:value></con:property><con:property><con:name>CustomProperty_City</con:name><con:value><![CDATA[<NewDataSet>
  <Table>
    <Country>British Indian Ocean Territory</Country>
    <City>Diego Garcia</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Ahmadabad</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Akola</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Aurangabad Chikalthan Aerodrome</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Bombay / Santacruz</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Bilaspur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Bhuj-Rudramata</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Belgaum / Sambra</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Bhopal / Bairagarh</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Bhaunagar</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Goa / Dabolim Airport</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Indore</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Jabalpur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Khandwa</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Kolhapur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Nagpur Sonegaon</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Rajkot</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Sholapur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Agartala</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Siliguri</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Bhubaneswar</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Calcutta / Dum Dum</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Car Nicobar</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Gorakhpur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Gauhati</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Gaya</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Imphal Tulihal</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Jharsuguda</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Jamshedpur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>North Lakhimpur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Dibrugarh / Mohanbari</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Port Blair</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Patna</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>M. O. Ranchi</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Agra</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Allahabad / Bamhrauli</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Amritsar</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Varanasi / Babatpur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Bareilly</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Kanpur / Chakeri</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>New Delhi / Safdarjung</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>New Delhi / Palam</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Gwalior</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Hissar</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Jhansi</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Jodhpur</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Jaipur / Sanganer</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Kota Aerodrome</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Lucknow / Amausi</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Satna</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Udaipur Dabok</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Bellary</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Vijayawada / Gannavaram</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Coimbatore / Peelamedu</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Cochin / Willingdon</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Cuddapah</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Hyderabad Airport</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Madurai</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Mangalore / Bajpe</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Madras / Minambakkam</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Tiruchchirapalli</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Thiruvananthapuram</City>
  </Table>
  <Table>
    <Country>India</Country>
    <City>Vellore</City>
  </Table>
</NewDataSet>]]></con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting></con:soapui-project>